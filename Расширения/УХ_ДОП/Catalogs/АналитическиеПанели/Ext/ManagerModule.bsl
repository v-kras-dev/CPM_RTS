
&ИзменениеИКонтроль("ПолучитьТаблицуПоНаборуДанных")
Функция Расш1_ПолучитьТаблицуПоНаборуДанных(ОбщийОтбор, ИсточникОбъект, ИспользуемыеИБ)

	//Работа с источниками
	ТаблицаИсточников = Новый ТаблицаЗначений;
	ТаблицаИсточников.Колонки.Добавить("ТипИсточника");
	ТаблицаИсточников.Колонки.Добавить("ТаблицаЗначений");
	ТаблицаИсточников.Колонки.Добавить("СоответствиеПолейИИзмерений");
	ТаблицаИсточников.Колонки.Добавить("Источник");

	ПериодыОтбора = ПериодыУХ.ПолучитьПодчиненныеПериоды(ОбщийОтбор.ПериодОтчета,ОбщийОтбор.ПериодОкончания);

	СтруктураОтбираемыхАналитик = Новый Структура;		
	СтруктураУникальныхАналитик = Новый Структура;

	Для Каждого СтрПоле Из  ИсточникОбъект.ИзмеренияИсточников Цикл
		СтруктураУникальныхАналитик.Вставить(СтрПоле.ИмяВКубе,СтрПоле.ТипЗначенияСтрока);
	КонецЦикла;	

	Для Каждого СтрПоле Из  ИсточникОбъект.Ресурсы Цикл
		СтруктураУникальныхАналитик.Вставить(СтрПоле.ИмяВКубе,СтрПоле.ТипЗначенияСтрока);
	КонецЦикла;	

	//Основной цикл по показателям отчетов
	//Сгруппируем показатели по одинаковым группам отборов	
	Для Каждого СтрГруппаПоказателей Из ИсточникОбъект.ГруппыПоказателей  Цикл

		МассивПоказателей = ИсточникОбъект.ПоказателиОтчета.Выгрузить(Новый Структура("ХэшОтборов,ХэшКлючейИзмеренийРесурсов",СтрГруппаПоказателей.ХэшОтборов,СтрГруппаПоказателей.ХэшКлючейИзмеренийРесурсов)).ВыгрузитьКолонку("ПоказательОтчета");

		СтруктураРаскрываемыхАналитик  = Новый Структура;	
		ДополнительныеПараметры        = Новый Структура;

		СтруктураОтбираемыхАналитик.Вставить("ПоказательОтчета",МассивПоказателей);
		СтруктураОтбираемыхАналитик.Вставить("ПериодОтчета",ПериодыОтбора);
		СтруктураОтбираемыхАналитик.Вставить("Сценарий",ОбщийОтбор.Сценарий);
		СтруктураОтбираемыхАналитик.Вставить("Валюта",ОбщийОтбор.Валюта);

		СоответствиеПолейИИзмерений = ЗначениеИзСтрокиВнутр(СтрГруппаПоказателей.СоответствиеПолейИИзмерений);

		Для Каждого СтрАналитика Из СоответствиеПолейИИзмерений Цикл
			СтруктураРаскрываемыхАналитик.Вставить(СтрАналитика.Ключ);
		КонецЦикла;	

		Если ЗначениеЗАполнено(СтрГруппаПоказателей.Отборы) Тогда 
			ДополнительныйОтбор = Обработки.АналитическийБланк.ПолучитьОписаниеТаблицыТекущихОтборов();
			РасшифровкаОтборов = ЗначениеИзСтрокиВнутр(СтрГруппаПоказателей.Отборы);

			Для Каждого СтрОтбор Из РасшифровкаОтборов.РасшифровкаГруппОтборов Цикл

				нДополнительныйОтбор 				= ДополнительныйОтбор.Добавить();
				нДополнительныйОтбор.ПолеКод      	= СтрОтбор.Ключ;
				РасшифровкаЗначенияОтбора           = АналитическийБланкГенерацияМакетаУХСервер.ПрочитатьСтрокуОтборов(СтрОтбор);

				нДополнительныйОтбор.ВидСравнения 	= ЗначениеИзСтрокиВнутр(РасшифровкаЗначенияОтбора.Отбор);				
				нДополнительныйОтбор.ЗначениеОтбора = ЗначениеИзСтрокиВнутр(РасшифровкаЗначенияОтбора.ЗначениеОтбораСтрока);	

				Если СтруктураОтбираемыхАналитик.Свойство(СтрОтбор.Ключ) Тогда
					СтруктураОтбираемыхАналитик.Удалить(СтрОтбор.Ключ);
				КонецЕсли;	

			КонецЦикла;

			ДополнительныеПараметры.Вставить("ДополнительныйФильтр",ДополнительныйОтбор);
		КонецЕсли;


		ДополнительныеПараметры.Вставить("ДобавитьПолеИсточник",Истина);
		ТаблицаЗначений = СводнаяТаблицаУХ.ПолучитьЗначениеПоказателей(СтруктураОтбираемыхАналитик,СтруктураРаскрываемыхАналитик,ДополнительныеПараметры);	
		
		Для Каждого Кол Из ТаблицаЗначений.Колонки Цикл
			Если НЕ СоответствиеПолейИИзмерений.Получить(Кол.Имя) = Неопределено Тогда
				Кол.Имя = СоответствиеПолейИИзмерений.Получить(Кол.Имя);  
				#Удаление
				#КонецУдаления
				#Вставка     
			ИначеЕсли Кол.Имя = "Проект" Тогда 
				ТаблицаЗначений.Колонки.Удалить(Кол);
			Иначе
				#КонецВставки
			КонецЕсли;		
		КонецЦикла;	

		нСтрРезультат = ТаблицаИсточников.Добавить();
		нСтрРезультат.ТаблицаЗначений = ТаблицаЗначений;

	КонецЦикла;	


	//Для Источников данных  	
	Для Каждого СтрИсточник Из ИсточникОбъект.ИсточникиДанных Цикл


		//Для Каждого ВложенныйПериод Из ПериодыОтбора Цикл

		СоответствиеПолейИИзмерений = Новый Соответствие();

		Контекст = Новый Структура;

		Для Каждого Параметр Из ОбщийОтбор Цикл

			Если Параметр.Ключ = "Организация" Тогда
				Контекст.Вставить(Строка(Параметр.Ключ), ОбщийОтбор.Организация);
			ИначеЕсли Параметр.Ключ = "Сценарий" Тогда
				Контекст.Вставить(Строка(Параметр.Ключ), ОбщийОтбор.Сценарий);
			ИначеЕсли Параметр.Ключ = "Валюта" Тогда
				Контекст.Вставить("ОсновнаяВалюта", ОбщийОтбор.Валюта);
			ИначеЕсли Параметр.Ключ = "ПериодОтчета" Тогда
				Контекст.Вставить(Строка(Параметр.Ключ), ПериодыОтбора);
			КонецЕсли;	

		КонецЦикла;

		ТипБДИсточника = СтрИсточник.Источник.ТипБД;
		Если ТипБДИсточника = Справочники.ТипыБазДанных.ПустаяСсылка() Тогда
			ТипБДИсточника = Справочники.ТипыБазДанных.ТекущаяИБ;
		КонецЕсли;	

		тИспользуемыеИБ = ИспользуемыеИБ.НайтиСтроки(Новый Структура("ТипИБ",ТипБДИсточника));

		Для Каждого СтрВИБ Из тИспользуемыеИБ Цикл

			Контекст.Вставить("ИспользуемаяИБ", СтрВИБ.ИнформационнаяБаза);

			Контекст.Вставить("ЧтениеНеАктуальныхЗаписей", Истина);
			Контекст.Вставить("АнализЧувствительности", Ложь);

			Попытка
				ТаблицаЗначений = УправлениеОтчетамиУХ.ПолучитьТаблицуДанныхПоИсточнику(Контекст, СтрИсточник.Источник, Ложь);
			Исключение
				ТекстСообщения = НСтр("ru = 'Произошла ошибка при получении данных по источнику %1: %2'");
				ТекстСообщения = СтрШаблон(ТекстСообщения,СтрИсточник.Источник,ОписаниеОшибки());
				ОбщегоНазначенияУХ.СообщитьОбОшибке(ТекстСообщения);
				Продолжить;		
			КонецПопытки;

			СоответствиеПолейИИзмерений = Новый Соответствие();

			АналитикиТекущегоПоказателя = ИсточникОбъект.ИзмеренияИсточников.НайтиСтроки(Новый Структура("Источник",СтрИсточник.Источник));
			Для Каждого СтрАналитика Из АналитикиТекущегоПоказателя Цикл
				СоответствиеПолейИИзмерений.Вставить(СтрЗаменить(СтрАналитика.ПутьКИзмерению,".",""),СтрАналитика.ИмяВКубе);
			КонецЦикла;	

			РесурсыТекущегоПоказателя  = ИсточникОбъект.Ресурсы.НайтиСтроки(Новый Структура("Источник",СтрИсточник.Источник));
			Для Каждого СтрРесурс Из РесурсыТекущегоПоказателя Цикл
				СоответствиеПолейИИзмерений.Вставить(СтрЗаменить(СтрРесурс.ПутьКРесурсу,".",""),СтрРесурс.ИмяВКубе);
			КонецЦикла;	

			Для Каждого Кол Из ТаблицаЗначений.Колонки Цикл
				Если НЕ СоответствиеПолейИИзмерений.Получить(Кол.Имя) = Неопределено 
					И ТаблицаЗначений.Колонки.Найти(СоответствиеПолейИИзмерений.Получить(Кол.Имя)) = Неопределено Тогда
					Кол.Имя = СоответствиеПолейИИзмерений.Получить(Кол.Имя);
				КонецЕсли;	
			КонецЦикла;	

			нСтрРезультат 					= ТаблицаИсточников.Добавить();
			нСтрРезультат.ТаблицаЗначений 	= ТаблицаЗначений;
			нСтрРезультат.Источник        	= СтрИсточник.Источник;


		КонецЦикла;	

		//КонецЦикла;

	КонецЦикла;
	//
	//Сведем все в единую таблицу
	ТаблицаЗначений = Новый ТаблицаЗначений;
	Для Каждого СтрАналитика Из СтруктураУникальныхАналитик Цикл
		ТипЗначенияСтроки = СтрРазделить(СтрАналитика.Значение,"|");
		ТипЗначенияМассив  = Новый Массив;
		Для Каждого СтрТип Из ТипЗначенияСтроки Цикл
			ТипЗначенияМассив.Добавить(Тип(СтрТип));
		КонецЦикла;		
		ТаблицаЗначений.Колонки.Добавить(СтрАналитика.Ключ,Новый ОписаниеТипов(ТипЗначенияМассив));					
	КонецЦикла;

	//Поле для дополнительной расшифровки по источнику 
	ТипыИсточников = Новый Массив;
	ТипыИсточников.Добавить(Тип("СправочникСсылка.ИсточникиДанныхДляРасчетов"));
	ТипыИсточников.Добавить(Тип("СправочникСсылка.ПоказателиОтчетов"));

	ТаблицаЗначений.Колонки.Добавить("Источник",Новый ОписаниеТипов(ТипыИсточников));

	Для Каждого СтрТаблица Из ТаблицаИсточников Цикл		
		Для Каждого СтрЗапись Из СтрТаблица.ТаблицаЗначений Цикл			
			нСтрРезультат = ТаблицаЗначений.Добавить();
			ЗаполнитьЗначенияСвойств(нСтрРезультат,СтрЗапись);
			Если ЗначениеЗаполнено(СтрТаблица.Источник) Тогда
				нСтрРезультат.Источник = СтрТаблица.Источник;									
			КонецЕсли;	
		КонецЦикла;		
	КонецЦикла;

	Возврат ТаблицаЗначений; 

КонецФункции

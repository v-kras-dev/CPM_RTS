#Область ПрограммныйИнтерфейс
// Код процедур и функций
#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс
// Код процедур и функций
#КонецОбласти  

#Область СлужебныеПроцедурыИФункции    
Процедура ОпределитьСистемуНалогооблаженияКонтрагента(СсылкаКонтрагент, Система, HTTPСоединение,TokenVelab) Экспорт		
	ИННКонтрагента = СсылкаКонтрагент.ИНН;
	Система = ПолучитьДанныеПоСистемеНалогооблаженияОтСервисаVeLab(HTTPСоединение,ИННКонтрагента,TokenVelab);
	//СтруктураАдреса = Неопределено;	
КонецПроцедуры
Функция ПолучитьДанныеПоСистемеНалогооблаженияОтСервисаVeLab(HTTPСоединение,ИННКонтрагента,TokenVelab)	
	СтруктураЗапроса = Новый Структура();
	СтруктураЗапроса.Вставить("Inn", ИННКонтрагента);
	СтруктураЗапроса.Вставить("size", 10);
	
	ЗаписьJSON = Новый ЗаписьJSON;
	ЗаписьJSON.УстановитьСтроку();
	ЗаписатьJSON(ЗаписьJSON, СтруктураЗапроса);
	ТелоЗапросаJSON = ЗаписьJSON.Закрыть();
	
	СтруктураОГРН 	= ВыполнитьМетодСервисаVeLab(HTTPСоединение,"api/qsorganization/search/",TokenVelab,"POST",ТелоЗапросаJSON);
	
	Если ТипЗнч(СтруктураОГРН) = Тип("Структура") И СтруктураОГРН.Свойство("Organizations") Тогда
		
		Если СтруктураОГРН.Organizations.Количество() = 0 Тогда
			Возврат Неопределено;
		КонецЕсли;
		
		Для Каждого ОрганизацияСтрока Из СтруктураОГРН.Organizations Цикл			
			ОГРН = ОрганизацияСтрока.Ogrn;			
		КонецЦикла;
		
	Иначе    
		Возврат Неопределено;
	КонецЕсли;	
	
	СтруктураСтатуса 	= ВыполнитьМетодСервисаVeLab(HTTPСоединение,"api/qsorganizationmain/get/"+ОГРН,TokenVelab);
	
	СтруктураОтвета = Новый Структура();
	ReportData = Неопределено;
	SpecialTaxName = Неопределено;
	Если ТипЗнч(СтруктураСтатуса) = Тип("Структура")
		И СтруктураСтатуса.Свойство("ReportData",ReportData) 
		И ReportData<>Неопределено
		И ReportData.Свойство("SpecialTaxName",SpecialTaxName) 
		И SpecialTaxName <> Неопределено Тогда
		Возврат ВернутьЗначениеПеречисленияПоСинониму(SpecialTaxName);   
	ИначеЕсли ReportData = Неопределено Тогда
		Возврат Перечисления.СистемаНалогообложенияКонтрагента.УСН;
	Иначе
		Возврат Неопределено;
	КонецЕсли;                  
	
КонецФункции
Функция ВыполнитьМетодСервисаVeLab(HTTPСоединение, МетодСервиса, TokenVelab,ТипЗапроса = "GET", ТекстЗапроса = "")
	
	Заголовки = Новый Соответствие;
	Заголовки.Вставить("X-Application-Name", "cpm.1c.counteragent");
	Заголовки.Вставить("Authorization", TokenVelab);  
	Если ТипЗапроса = "POST" Тогда
		Заголовки.Вставить("Content-Type", "application/json");
	КонецЕсли;
	
	ЗапросHTTP  = Новый HTTPЗапрос(МетодСервиса,Заголовки);  
	Если ТипЗапроса = "POST" Тогда
		ЗапросHTTP.УстановитьТелоИзСтроки(ТекстЗапроса,"utf-8");
	КонецЕсли;
	
	ОтветHTTP = HTTPСоединение.ВызватьHTTPМетод(ТипЗапроса,ЗапросHTTP); 
	
	XML = ОтветHTTP.ПолучитьТелоКакСтроку();				
	КодОшибки = ?(ОтветHTTP.КодСостояния = 200,0,ОтветHTTP.КодСостояния);	
	
	Если КодОшибки = 0 Тогда			
		//ВЛогфайл(XML);
		XML = СтрЗаменить(XML,"+0300","");
		Чтение = Новый ЧтениеJSON;
		
		Чтение.УстановитьСтроку(XML);
		
		МассивЗначенийДат = Новый Массив();
		МассивЗначенийДат.Добавить("StatusDate");
		
		Попытка
			Ответ = ПрочитатьJSON(Чтение,,МассивЗначенийДат,ФорматДатыJSON.Microsoft,,,Новый Структура());
		Исключение
			Ответ = "";
		КонецПопытки;		
	Иначе
		Ответ = "";
	КонецЕсли;
	
	Возврат Ответ;	
КонецФункции 
Функция ВернутьЗначениеПеречисленияПоСинониму(ЗначениеСинонимаТекст)
	ЭлементПеречисления = Неопределено;
	Для каждого ТекЭлемент Из Метаданные.Перечисления.СистемаНалогообложенияКонтрагента.ЗначенияПеречисления Цикл
		Если ТекЭлемент.Синоним = ЗначениеСинонимаТекст Тогда
			ЭлементПеречисления = Перечисления.СистемаНалогообложенияКонтрагента[ТекЭлемент.Имя];
			Прервать;
		КонецЕсли;
	КонецЦикла; 
	
	Возврат ЭлементПеречисления; // возвращаем значение перечисления или Неопределено
КонецФункции 
#КонецОбласти




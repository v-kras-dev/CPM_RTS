#Область ПрограммныйИнтерфейс
// Код процедур и функций
#КонецОбласти
					
#Область СлужебныйПрограммныйИнтерфейс
// Код процедур и функций
#КонецОбласти
					
#Область СлужебныеПроцедурыИФункции    
// <Возвращает признак установленной роли у пользователя информационной базы>
//
// Параметры:
//  <ИмяРоли>  		- <Строка> - <Наименование роли пользователя информационной базы>
//                
//  <Пользователь>  - <СправочникСсылка.Пользователи> - <Ссылка на пользователя информационной базы>
//                
//
// Возвращаемое значение:
//   <Булево>   - <Истина/Ложь в зависимости от выполненного алгоритма>
//
Функция ЕстьРоль(ИмяРоли, Пользователь = Неопределено) Экспорт

	Если Пользователь = Неопределено Тогда
		Пользователь = ПользователиКлиентСервер.ТекущийПользователь();
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ 
		|	1 
		|ИЗ
		|	Справочник.ГруппыДоступа.Пользователи КАК ГруппыДоступаПользователи
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ПрофилиГруппДоступа.Роли КАК ПрофилиГруппДоступаРоли
		|		ПО ГруппыДоступаПользователи.Ссылка.Профиль = ПрофилиГруппДоступаРоли.Ссылка
		|ГДЕ
		|	ПрофилиГруппДоступаРоли.Роль.Имя = &Роль
		|	И ГруппыДоступаПользователи.Пользователь = &Пользователь";
	
	Запрос.УстановитьПараметр("Пользователь", Пользователь);
	Запрос.УстановитьПараметр("Роль", ИмяРоли);
	
	УстановитьПривилегированныйРежим(Истина);
	РезультатЗапроса = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Ложь;		
	Иначе	
		Возврат Истина;		
	КонецЕсли;
	
КонецФункции 
#КонецОбласти



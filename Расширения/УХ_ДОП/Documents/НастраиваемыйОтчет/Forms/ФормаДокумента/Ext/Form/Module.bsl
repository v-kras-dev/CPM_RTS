#Область ОписаниеПеременных

#КонецОбласти

#Область ОбработчикиСобытийФормы   
&НаКлиенте
Процедура Расш1_ПриОткрытииПосле(Отказ) 	
	Если Строка(ПользователиКлиентСервер.ТекущийПользователь()) = "Тестовый пользователь" Тогда       
		ПризнакДоступности = Истина;
	Иначе
		ПризнакДоступности = РазрешитьКнопку_РазрешитьРедактирование(Объект.Ссылка);	
	КонецЕсли;
	Элементы.ФормаГруппаИзменениеДокумента.Доступность  = ПризнакДоступности;
	Элементы.ФормаОбновитьСУчетомВерсий.Доступность	 	= ПризнакДоступности;		
	Элементы.ГруппаРазрешитьРедактирование.Доступность  = ПризнакДоступности;	 
КонецПроцедуры 
#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы
// Код процедур и функций
#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы
// Код процедур и функций
#КонецОбласти

#Область ОбработчикиКомандФормы
&НаКлиенте
Процедура Расш1_ОткрытьЭкспортныйБланкВместо(Команда)     	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("Ключ",БланкЭкспортироватьНаСервере(Объект.Ссылка));
	ПараметрыФормы.Вставить("РежимРедактированияФормулы", Ложь);	
	ОткрытьФорму("Справочник.БланкиОтчетов.Форма.ФормаМакетаАналитическийБланк",ПараметрыФормы);   	
КонецПроцедуры
#КонецОбласти

#Область СлужебныеПроцедурыИФункции  
// <Получение бланка отчета для импорта>
//         
// Параметры:
//  <СсылкаНаЭкземплярОтчета>  - <ДокументСсылка.НастраиваемыйОтчет> - <Ссылка на экземпляр отчета>
//
// Возвращаемое значение:
//   <СправочникСсылка.БланкиОтчетов>   - <Ссылка на БланкиОтчетов>
//
&НаСервереБезКонтекста
Функция БланкЭкспортироватьНаСервере(СсылкаНаЭкземплярОтчета)		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	БланкиИмпорт.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.БланкиОтчетов КАК БланкиИмпорт
		|ГДЕ
		|	НЕ БланкиИмпорт.ПометкаУдаления
		|	И БланкиИмпорт.Владелец = &Владелец
		|	И НЕ БланкиИмпорт.ЭтоГруппа
		|	И НЕ БланкиИмпорт.БланкДляОтображения
		|	И НЕ БланкиИмпорт.РежимСводнойТаблицы
		|	И БланкиИмпорт.РежимБланка <> 1";
	
	Запрос.УстановитьПараметр("Владелец", ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СсылкаНаЭкземплярОтчета,"ВидОтчета"));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		БланкИмпорта = ВыборкаДетальныеЗаписи.Ссылка;
	КонецЦикла;    
	
	Возврат БланкИмпорта;	
КонецФункции 
// <Возвращает признак доступности реквизитов>
//         
// Параметры:
//  <сДокумент>  - <ДокументСсылка.НастраиваемыйОтчет> - <Ссылка на экземпляр отчета> 
//
// Возвращаемое значение:
//   <Булево>   - <Признак в зависимости от результата>
//
&НаСервереБезКонтекста
Функция РазрешитьКнопку_РазрешитьРедактирование(сДокумент)
    Результат = Ложь;                                                   
	
	ТекПользователь = ПользователиКлиентСервер.ТекущийПользователь();   
	
	Если РольДоступна("ПолныеПрава") Тогда
		Возврат Истина;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОтложеннаяОбработкаСрезПоследних.Ответственный КАК Ответственный
	|ИЗ
	|	РегистрСведений.ОтложеннаяОбработкаЭтаповПроцессов.СрезПоследних(
	|			,
	|			ДокументПроцесса.КлючевойОбъектПроцесса = &ЭО
	|				И НЕ Выполнено) КАК ОтложеннаяОбработкаСрезПоследних";
	
	Запрос.УстановитьПараметр("ЭО", сДокумент);
	
	РезультатЗапроса = Запрос.Выполнить();
		
	Проверяющий=УправлениеОтчетамиУХ.ПолучитьОтветственногоЗаТипОбъекта(сДокумент,,,"Согласующий");
	ИсполнительПоОтчету = ПолучитьИсполнителейПоЭО(сДокумент.Организация,Проверяющий);
		
	Если РезультатЗапроса.Пустой() Тогда   //Процесс согласования еще не запущен    	 
		Если ИсполнительПоОтчету.Найти(ТекПользователь)<>Неопределено Тогда 
			Результат = Истина;
		Иначе
			Результат = Ложь;
		КонецЕсли;    	
	Иначе    
		СогласующиеПоОтчету = РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("Ответственный");	
		Если ИсполнительПоОтчету.Найти(ТекПользователь)<>Неопределено Тогда
			Результат = Ложь;
		КонецЕсли;
		Если СогласующиеПоОтчету.Найти(ТекПользователь)<>Неопределено Тогда
			Результат = Истина;
		КонецЕсли;		
	КонецЕсли;   		
	Возврат Результат;
КонецФункции    
// <Получение списка ответсвенных пользователей установленных в шаблоне универсального процесса>
//         
// Параметры:
//  <Организация>  - <СправочникСсылка.Организации> - <Ссылка на организацию из Экземпляра отчета>
//                 
//  <Проверяющий>  - <СправочникСсылка.ШаблоныУниверсальныхПроцессов> - <Ссылка на шаблон универсального процесса>
//                 
//
// Возвращаемое значение:
//   <Массив>   - <Массив пользователей участвующих в шаблоне универсального процесса>
//
&НаСервереБезКонтекста
Функция ПолучитьИсполнителейПоЭО(Организация, Проверяющий)
	Запрос = Новый Запрос;   
	Запрос.Текст =  ПолучитьТекстЗапросаИсполнителейПоЭО();
	Запрос.УстановитьПараметр("Согласование", Проверяющий);     
	Запрос.УстановитьПараметр("Организация", Организация);
	  	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Пользователь");		
	Возврат РезультатЗапроса;				
КонецФункции // ПолучитьИсполнителейПоЭО()  
// <Получение текста запроса>
//         
// Параметры:
//
// Возвращаемое значение:
//   <Строка>   - <Текст запроса>
//
&НаСервереБезКонтекста
Функция ПолучитьТекстЗапросаИсполнителейПоЭО()

	Возврат "ВЫБРАТЬ
	|	NULL КАК Роль,
	|	РегистрМатрицыПолномочий.Исполняющий КАК Исполняющий,
	|	РегистрМатрицыПолномочий.Согласование КАК Согласование
	|ПОМЕСТИТЬ Вт_1
	|ИЗ
	|	РегистрСведений.РегистрМатрицыПолномочий КАК РегистрМатрицыПолномочий
	|
	|СГРУППИРОВАТЬ ПО
	|	РегистрМатрицыПолномочий.Исполняющий,
	|	РегистрМатрицыПолномочий.Согласование
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОтветственныеОрганизаций.Роль,
	|	NULL,
	|	NULL
	|ИЗ
	|	РегистрСведений.ОтветственныеОрганизаций КАК ОтветственныеОрганизаций
	|
	|СГРУППИРОВАТЬ ПО
	|	ОтветственныеОрганизаций.Роль
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Вт_1.Согласование КАК Согласование,
	|	ВЫБОР
	|		КОГДА ОтветственныеОрганизаций.Пользователь ЕСТЬ NULL
	|			ТОГДА Вт_1.Исполняющий
	|		ИНАЧЕ ОтветственныеОрганизаций.Пользователь
	|	КОНЕЦ КАК Пользователь,
	|	ОтветственныеОрганизаций.Роль КАК Роль
	|ИЗ
	|	Вт_1 КАК Вт_1
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеОрганизаций КАК ОтветственныеОрганизаций
	|		ПО Вт_1.Исполняющий = ОтветственныеОрганизаций.Роль
	|ГДЕ
	|	Вт_1.Согласование = &Согласование
	|
	|СГРУППИРОВАТЬ ПО
	|	Вт_1.Согласование,
	|	ОтветственныеОрганизаций.Пользователь,
	|	ВЫБОР
	|		КОГДА ОтветственныеОрганизаций.Пользователь ЕСТЬ NULL
	|			ТОГДА Вт_1.Исполняющий
	|		ИНАЧЕ ОтветственныеОрганизаций.Пользователь
	|	КОНЕЦ,
	|	ОтветственныеОрганизаций.Роль";		

КонецФункции // ПолучитьИсполнителейПоЭО()
#КонецОбласти

   






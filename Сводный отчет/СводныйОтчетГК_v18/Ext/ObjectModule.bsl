
#Область ПрограммныйИнтерфейс
#Область ДляВызоваИзДругихПодсистем
// СтандартныеПодсистемы.ВариантыОтчетов
//Процедура НастроитьВариантыОтчета(Настройки, НастройкиОтчета) Экспорт
//	//НастройкиОтчета.ОпределитьНастройкиФормы = Истина;
//КонецПроцедуры
//// Задать настройки формы отчета.
////
//// Параметры:
////   Форма - ФормаКлиентскогоПриложения
////         - Неопределено
////   КлючВарианта - Строка
////                - Неопределено
////   Настройки - см. ОтчетыКлиентСервер.НастройкиОтчетаПоУмолчанию
////
Процедура ОпределитьНастройкиФормы(Форма, КлючВарианта, Настройки) Экспорт             	
	Настройки.События.Вставить("ПриСозданииНаСервере", Истина); 
	//Настройки.События.Вставить("ПриОпределенииПараметровВыбора", Истина); 
	Настройки.События.Вставить("ПриЗагрузкеВариантаНаСервере", Истина);
КонецПроцедуры
Процедура ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка) Экспорт           
	Сообщить("1234");   
	РольДоступна = ОбщегоПользованияУХ.ЕстьРоль("АдминистраторСистемы",ПользователиКлиентСервер.ТекущийПользователь());    
	Если РольДоступна = Ложь Тогда
		ЭтаФорма.Элементы.ДругиеОтчеты.Доступность = Ложь;
	КонецЕсли;
КонецПроцедуры 
Процедура ПриОпределенииПараметровВыбора(Форма, СвойстваНастройки) Экспорт   
	УстановитьПривилегированныйРежим(Истина);  
	
	ТаблицаПроектыОрганизации = ПолучениеДанныхПроектовПользователей(ПользователиКлиентСервер.ТекущийПользователь()); 
	
	СписокВыбора = Новый СписокЗначений;
	
	Если СвойстваНастройки.ПолеКД = Новый ПолеКомпоновкиДанных("Проект") ИЛИ СвойстваНастройки.ПолеКД = Новый ПолеКомпоновкиДанных("Организация") Тогда 
		ТаблицаДляОтобора = ТаблицаПроектыОрганизации.Скопировать();
		ТаблицаДляОтобора.Свернуть(Строка(СвойстваНастройки.ПолеКД));
		Для Каждого ЭлТабл Из ТаблицаДляОтобора Цикл  
			СписокВыбора.Добавить(ЭлТабл[Строка(СвойстваНастройки.ПолеКД)]);		
		КонецЦикла;   				
	КонецЕсли;
	
	СвойстваНастройки.ЗначенияДляВыбора = СписокВыбора; 
	СвойстваНастройки.ОграничиватьВыборУказаннымиЗначениями = Истина;  
	
	УстановитьПривилегированныйРежим(Ложь);
КонецПроцедуры   
Процедура ПриЗагрузкеВариантаНаСервере(Форма, НовыеНастройкиКД) Экспорт
 	УстановитьСписокДоступныхЗначений();
КонецПроцедуры 
Процедура УстановитьСписокДоступныхЗначений()  
	УстановитьПривилегированныйРежим(Истина);     
	
	ТаблицаПроектыОрганизации = ПолучениеДанныхПроектовПользователей(ПользователиКлиентСервер.ТекущийПользователь()); 
		
	ЗначенияОтобора = КомпоновщикНастроек.Настройки.Отбор.ДоступныеПоляОтбора.Элементы;
	
	МассивЭлементовОтбора = Новый Массив;
	МассивЭлементовОтбора.Добавить(ЗначенияОтобора.Найти("Проект"));
	МассивЭлементовОтбора.Добавить(ЗначенияОтобора.Найти("Организация"));
	
	Для Каждого ЭлОтбора Из МассивЭлементовОтбора Цикл  
		СписокВыбора = Новый СписокЗначений;
		
		ТаблицаДляОтобора = ТаблицаПроектыОрганизации.Скопировать();
		ТаблицаДляОтобора.Свернуть(ЭлОтбора.Заголовок); 
		Для Каждого ЭлТабл Из ТаблицаДляОтобора Цикл  
			СписокВыбора.Добавить(ЭлТабл[ЭлОтбора.Заголовок]);		
		КонецЦикла;   
		
		ЭлОтбора.ДоступныеЗначения = СписокВыбора; 
	КонецЦикла;
	
	УстановитьПривилегированныйРежим(Ложь);
КонецПроцедуры
#КонецОбласти
#КонецОбласти

#Область Инициализация
Функция СведенияОВнешнейОбработке() Экспорт   
    ИмяОтчета = ЭтотОбъект.Метаданные().Имя; 
    Синоним = ЭтотОбъект.Метаданные().Синоним; 
    Синоним = ?(ЗначениеЗаполнено(Синоним),Синоним, ИмяОтчета);         
    РегистрационныеДанные = Новый Структура;
    РегистрационныеДанные.Вставить("Вид","ДополнительныйОтчет"); 
    РегистрационныеДанные.Вставить("Наименование", Синоним); 
    РегистрационныеДанные.Вставить("Версия", "1.0");
    РегистрационныеДанные.Вставить("БезопасныйРежим", Ложь);
    РегистрационныеДанные.Вставить("Информация", "Отчет "+Синоним); 
    
    ТаблицаКоманд = ПолучитьТаблицуКоманд();
    ДобавитьКоманду(ТаблицаКоманд, Синоним, "СформироватьОтчет" , "ОткрытиеФормы", Истина, );
    РегистрационныеДанные.Вставить("Команды", ТаблицаКоманд);
    
    Возврат РегистрационныеДанные;                                       
КонецФункции
Функция ПолучитьТаблицуКоманд()   
	Команды = Новый ТаблицаЗначений;	
	Команды.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка")); 	
	Команды.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка"));	
	Команды.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка"));	
	Команды.Колонки.Добавить("ПоказыватьОповещение", Новый ОписаниеТипов("Булево"));		
	Команды.Колонки.Добавить("Модификатор", Новый ОписаниеТипов("Строка"));
	Возврат Команды;   
КонецФункции
Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование = "ОткрытиеФормы", ПоказыватьОповещение = Ложь, Модификатор = "ПечатьMXL")  
    НоваяКоманда = ТаблицаКоманд.Добавить();
    НоваяКоманда.Представление = Представление;
    НоваяКоманда.Идентификатор = Идентификатор;
    НоваяКоманда.Использование = Использование;
    НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение;
    НоваяКоманда.Модификатор = Модификатор;
КонецПроцедуры 
#КонецОбласти

#Область ОбработчикиСобытий
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	УстановитьПривилегированныйРежим(Истина);
	СтандартнаяОбработка = Ложь;  
	ПризнакПроверки = Истина;  
	ОрганизацииОтбора = Неопределено;
	Настройки = КомпоновщикНастроек.ПолучитьНастройки(); 
	
	Для каждого ЭлементОтбора Из Настройки.Отбор.Элементы Цикл
		Если ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Организация") Тогда
			Идентификатор =     ЭлементОтбора.ИдентификаторПользовательскойНастройки;   
			Если ЭлементОтбора.ПравоеЗначение.Количество() = 0 Тогда  
				Прервать;            
			Иначе
				Если ЭлементОтбора.Использование Тогда
					ОрганизацииОтбора = КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(Идентификатор).ПравоеЗначение; 
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Попытка 
		             
		Параметр=Настройки.ПараметрыДанных.Элементы.Найти("Период");
		Если Параметр.Использование Тогда
			ДатаНачалаОтчета=Параметр.Значение.ДатаНачала;
			ДатаОкончанияОтчета=Параметр.Значение.ДатаОкончания;   
		Иначе
			ДатаНачалаОтчета = НачалоГода(ТекущаяДата());
			ДатаОкончанияОтчета = КонецГода(ТекущаяДата());
		КонецЕсли;
		
		ПризнакПроверки = ПолучениеПризнакаПроверкиОбязательныхОтборов(ПризнакПроверки);
		Если ПризнакПроверки = Ложь Тогда
			Возврат; 
		КонецЕсли;
		
		ДанныеЭО = ПолучениеДанныхЭкземпляровОтчета(ОрганизацииОтбора,ДатаНачалаОтчета,ДатаОкончанияОтчета);  
		ТаблицаДанныхОтчета = СведемПланФакт(ДанныеЭО,ДатаНачалаОтчета,ДатаОкончанияОтчета);
	Исключение    
		Сообщение = "Возникли ошибки при заполнении сводного отчета. Обратитесь к администраторам системы.";  
		ОбщегоНазначенияКлиентСерверУХ.СообщитьПользователю(Сообщение); 
	КонецПопытки;
	
	Если ТаблицаДанныхОтчета <> Неопределено Тогда
		Схема = ПолучитьМакет("СхемаКомпоновкиДанных_СводныйОтчет");
		
		
		ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;  
		
		КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
		МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки, ДанныеРасшифровки);
		
		ВнешниеНаборыДанных = Новый Структура;
		ВнешниеНаборыДанных.Вставить("ТаблицаДанныхОтчета",ТаблицаДанныхОтчета);
		
		ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
		ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных, ДанныеРасшифровки, Истина);
		
		ДокументРезультат.Очистить();
		
		ПроцессорВывода = Новый
		ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
		ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
		ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных); 	
	КонецЕсли;
	УстановитьПривилегированныйРежим(Ложь);
КонецПроцедуры   
#КонецОбласти

#Область СлужебныеПроцедурыИФункции
// <Описание функции>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
Функция ПолучениеДанныхЭкземпляровОтчета(ОрганизацииОтбора,ДатаНачалаОтчета,ДатаОкончанияОтчета)  	
	
	ПризнакПолученияПроцентов = "Данные процентов процент";//План
	ТаблицаПроцентов_РаспределениеКосвенные = ПолучениеПроцентоДляРаспеределенияБЛКосвенные(ПризнакПолученияПроцентов);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивПравилОбработки", ПолучениеМассиваКодовГруппОтчетов());   
	Запрос.УстановитьПараметр("МассивПравилОбработки_НеВключаемВОтчет", ПолучениеЭОНеВключаемыхВОбщийОтчет());	
	Запрос.УстановитьПараметр("ПоказателиБулево", ПолучениеПоказателейБулево());
	Запрос.УстановитьПараметр("ПоказателиСтроковые", ПолучениеПоказателейСтроковые());
	Запрос.УстановитьПараметр("ПоказателиЧисловые", ПолучениеПоказателейЧисловых());      
	Запрос.УстановитьПараметр("ПоказателиНДС", ПолучениеПоказателейНДС());    
	Запрос.УстановитьПараметр("ПериодПолученияНДС",Справочники.Периоды.НайтиПоНаименованию("Январь 2025 г."));   
	Запрос.УстановитьПараметр("НачПер",ДатаНачалаОтчета); 
	Запрос.УстановитьПараметр("КонПер",ДатаОкончанияОтчета);
	Запрос.Текст = ПроверкаНовогоЗапроса();	
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();  
	
	СоответствиеВидОтчетаОрганизация = ПолучениеСоотвествияВидОтчетаОрагнизационнаяЕдиница();    
	
	СоответствиеПроектовБЛ = СоответствиеПроектовБЛ();
	
	РТСТ = Справочники.Организации.НайтиПоНаименованию("РТС-ТЕНДЕР ООО");
	ЦРЭ = Справочники.Организации.НайтиПоНаименованию("АО ""ЦРЭ""");
	ОТС = Справочники.Организации.НайтиПоНаименованию("АО ""ОТС""");
	Академия = Справочники.Организации.НайтиПоНаименованию("РТС-АКАДЕМИЯ ООО");
	Холдинг = Справочники.Организации.НайтиПоНаименованию("АО ""РТС-холдинг""");
	Силует = Справочники.Организации.НайтиПоНаименованию("Силуэт");
	Текса = Справочники.Организации.НайтиПоНаименованию("ТЕКСА АО");     
	
	//{Воронков А.Д. ++
	//Сделать так, чтобы в зависимости от вида отчета, автоматически определялись раскрываемые аналитики, при получении таблицы процентов
	//ТаблицаРаскрываемыхАналитик = ПолучениеТаблицыРаскрываемыхАналитикВидаОтчета(); 
	//--}
	
	СценарииОтчета = Справочники.Сценарии.НайтиПоНаименованию("Сценарий месячный (2025 год)");     
	ПериодОтчета_ПроцентыРаспределения = Справочники.Периоды.НайтиПоНаименованию("2025 г.");
	ПризнакРасчета = "Аренда"; 
	ТаблицаПроцентовРТС = ПолучениеТаблицыПроцентов(Справочники.ВидыОтчетов.НайтиПоКоду("ПроцентыРаспределенияРТС"),ПериодОтчета_ПроцентыРаспределения,СценарииОтчета,ПризнакРасчета);  	
	ТаблицаПроцентовЦРЭ = ПолучениеТаблицыПроцентов(Справочники.ВидыОтчетов.НайтиПоКоду("ПроцентыРаспределенияЦРЭ"),ПериодОтчета_ПроцентыРаспределения,СценарииОтчета,ПризнакРасчета);
	ТаблицаПроцентовОТС = ПолучениеТаблицыПроцентов(Справочники.ВидыОтчетов.НайтиПоКоду("ПроцентыРаспределенияОТС"),ПериодОтчета_ПроцентыРаспределения,СценарииОтчета,ПризнакРасчета);
	
	ПризнакРасчета = "КонтактЦентр";
	ТаблицаПроцентовКосвенные = ПолучениеТаблицыПроцентов(Справочники.ВидыОтчетов.НайтиПоКоду("РасходыКонтактЦентраРТС"),ПериодОтчета_ПроцентыРаспределения,СценарииОтчета,ПризнакРасчета); 
	
	ТаблицаДанных = ПолучениеТаблицыЗаполнения(""); 
	
	ТаблицаДанных_Косвенные = ПолучениеТаблицыЗаполненияКосвенные(""); 
	
	//{Воронков А.Д. ++
	//Перенести всю инициализацию используемых переменных, в отдельную функцию
	РазвитиеБизнесаСтатьяЗатрат = Справочники.СтатьиЗатрат.НайтиПоКоду("РТ-000018");  
	СтатьяЗатрат_Мотивация = Справочники.СтатьиЗатрат.НайтиПоКоду("00-000018");
	СтатьяЗатрат_ФОТНалоги = Справочники.СтатьиЗатрат.НайтиПоКоду("РТ-000040"); 
	
	МассивОтчетовОбрабатываемыхОтдельно =  МассивЭООбрабатываемыхОтдельно();
	
	ВладелецСправочника = ПланыВидовХарактеристик.ВидыСубконтоКорпоративные.НайтиПоНаименованию("Проект");
	ПроектПеревода_Косвенные = Справочники.ПроизвольныйКлассификаторУХ.НайтиПоНаименованию("Косвенные",,,ВладелецСправочника);    
	
	SalesTech_Проект = Справочники.ПроизвольныйКлассификаторУХ.НайтиПоНаименованию("Sales Tech",,,ВладелецСправочника); 
    Поставщики_Проект = Справочники.ПроизвольныйКлассификаторУХ.НайтиПоНаименованию("Поставщики",,,ВладелецСправочника);    
	//--}
		
	СоответствияКомпанийВГО = ПолучениеСоответствияКомпанийВГО();   
	
	СоответствияПорядкаСортировкиСтатьиЗатрат = ПолучениеСоответствияПорядкаСортировкиСтатьиЗатрат();      
	
	Для Каждого Стр Из РезультатЗапроса Цикл    
		ПризнакПереводаПроекта = Ложь;
		
		Если Стр.Аналитика2.Код = "РТ-000018" Или  Стр.Аналитика2.Код = "00-000016" Тогда     
			Стр.Аналитика2 = РазвитиеБизнесаСтатьяЗатрат;	 
		КонецЕсли;
		
		ОрганизаяВидаОтчета = СоответствиеВидОтчетаОрганизация.Получить(СокрЛП(Стр.КодГруппыВидаОтчета));
		Если ОрганизаяВидаОтчета <> Неопределено Тогда
			Организация = ОрганизаяВидаОтчета;   
		КонецЕсли;     
		
		//Проверку делать только по определенным отчем. Остальные пропускаем  
		ПризакРасчетаЭО = МассивОтчетовОбрабатываемыхОтдельно.Получить(Стр.ВидОтчета);  
		Если ПризакРасчетаЭО <> Неопределено Тогда 
			Если СтрНайти(Стр.Справочно,"Перевод РТС") > 0  Тогда  
				ПризнакСменыОрганизации = Истина;
				Организация = РТСТ;	
			ИначеЕсли СтрНайти(Стр.Справочно,"Перевод ОТС") > 0  Тогда
				ПризнакСменыОрганизации = Истина;
				Организация = ОТС;	
			КонецЕсли;
			Если Стр.Аналитика1.Код = "000000016" Тогда //Проект "Перевод РТС" 
				ПризнакПереводаПроекта = Истина;
				Организация = РТСТ;	   
			КонецЕсли; 
		КонецЕсли;
		//--     
		Если Стр.Аналитика1.Код = "000000014" Тогда //Проект "Перевод ЦРЭ"
			Организация = ЦРЭ;	
		КонецЕсли;    
		////{Воронков А.Д. 06.05.2025 ++
		////Задача:https://tfs.rts-tender.ru/tfs/DefaultCollection/RTS.1C/_workitems/edit/409001/
		//Если Стр.Аналитика1.Код = "000000014" Тогда //Проект "Перевод ЦРЭ"   
		//	//ПризнакПереводаПроекта = Истина;
		//	Организация = ЦРЭ;	                 
		//	Стр.Аналитика1 = ПроектПеревода_Косвенные;
		//КонецЕсли;      
		////--}	    
		
		Если Стр.РасходыКонтактЦентра Тогда 	
			МассивДанныхРаспределения = ТаблицаПроцентовКосвенные; 						
		Иначе
			СтруктураОтбора = Новый Структура("Регион",Стр.Аналитика6);
			Если Организация = РТСТ ИЛИ Организация = Текса ИЛИ Организация = Холдинг ИЛИ Организация = Силует ИЛИ Организация = Академия Тогда 
				МассивДанныхРаспределения = ТаблицаПроцентовРТС.НайтиСтроки(СтруктураОтбора);
			ИначеЕсли Организация = ЦРЭ Тогда      
				МассивДанныхРаспределения = ТаблицаПроцентовЦРЭ.НайтиСтроки(СтруктураОтбора);
			ИначеЕсли Организация = ОТС Тогда 
				МассивДанныхРаспределения = ТаблицаПроцентовОТС.НайтиСтроки(СтруктураОтбора);
			КонецЕсли;
		КонецЕсли;	 
	
		ПризнакВГО = СоответствияКомпанийВГО.Получить(СокрЛП(Стр.Аналитика5.Наименование));  
		
		Если ОрганизацииОтбора = Неопределено Тогда
			Если ПризнакВГО <> Неопределено	Тогда //Если нашли признак ВГО, но отбор по организации у пользователя не установлен, пропускаем строку. 
				Продолжить;
			КонецЕсли;
		ИначеЕсли ОрганизацииОтбора <> Неопределено Тогда     
			//Уточнить про точечный отбор по организациям
			//Если ПризнакВГО <> Неопределено И ПризнакВГО_ОрганизацияОтбора = Неопределено Тогда // Если нашли признак ВГО, но компания отобора у пользователя не сопоставилась, пропускаем строку.   
			//	Продолжить;  
			//КонецЕсли;			
		КонецЕсли;
				
		Если Стр.Аналитика1 = Справочники.ПроизвольныйКлассификаторУХ.ПустаяСсылка() Тогда	
			Если МассивДанныхРаспределения.Количество() > 0 Тогда   
				Для Каждого Эл Из МассивДанныхРаспределения Цикл  
					
					АналитикаПроектНаименование = Эл.Проект.Наименование;
					АналитикаПроект = Эл.Проект; 
					ПроцентБЛ = Эл.ПроцентБЛ;
					
					СтруктураПараметров = Новый Структура("АналитикаПроектНаименование,АналитикаПроект,ПроцентБЛ,ПризнакПереводаПроекта,ПроектПеревода_Косвенные,Организация,СтатьяЗатрат_Мотивация,СтатьяЗатрат_ФОТНалоги,SalesTech_Проект,Поставщики_Проект,ТаблицаДанных_Косвенные",
					АналитикаПроектНаименование,АналитикаПроект,ПроцентБЛ,ПризнакПереводаПроекта,ПроектПеревода_Косвенные,Организация,СтатьяЗатрат_Мотивация,СтатьяЗатрат_ФОТНалоги,SalesTech_Проект,Поставщики_Проект,ТаблицаДанных_Косвенные);
														
					ДобавлениеСтрокиВОбщийОтчет(Стр,СтруктураПараметров,ТаблицаДанных,СоответствиеПроектовБЛ,СоответствияПорядкаСортировкиСтатьиЗатрат);	
										
				КонецЦикла;
			КонецЕсли;
		Иначе 
			
			АналитикаПроектНаименование = СокрЛП(Стр.Аналитика1.Наименование);
			АналитикаПроект = Стр.Аналитика1;  
			ПроцентБЛ = Неопределено;
			
			СтруктураПараметров = Новый Структура("АналитикаПроектНаименование,АналитикаПроект,ПроцентБЛ,ПризнакПереводаПроекта,ПроектПеревода_Косвенные,Организация,СтатьяЗатрат_Мотивация,СтатьяЗатрат_ФОТНалоги,SalesTech_Проект,Поставщики_Проект,ТаблицаДанных_Косвенные",
			АналитикаПроектНаименование,АналитикаПроект,ПроцентБЛ,ПризнакПереводаПроекта,ПроектПеревода_Косвенные,Организация,СтатьяЗатрат_Мотивация,СтатьяЗатрат_ФОТНалоги,SalesTech_Проект,Поставщики_Проект,ТаблицаДанных_Косвенные);
			
			ДобавлениеСтрокиВОбщийОтчет(Стр,СтруктураПараметров,ТаблицаДанных,СоответствиеПроектовБЛ,СоответствияПорядкаСортировкиСтатьиЗатрат);			
		КонецЕсли;			
		
	КонецЦикла;           
	
	ОбработаемОтдельноОтчетыИзГруппы_ИТРазработкаИСопровождениеПО2(ТаблицаДанных,ТаблицаДанных_Косвенные,ДатаНачалаОтчета,ДатаОкончанияОтчета);	
	
	ПризнакРасчетаПланФакт = "Сумма"; //Сумма планового значения
	
	ТаблицаДанных_Косвенные.Свернуть("Направление,ПериодОтчета,ПериодОтчетаРодитель,Организация", ПризнакРасчетаПланФакт);       
	
	ДанныеПоКосвеннымРасходам = РассчитаемКосвенныеРасходыОтдельно(ТаблицаДанных_Косвенные,ТаблицаПроцентов_РаспределениеКосвенные,СоответствияПорядкаСортировкиСтатьиЗатрат,ПризнакРасчетаПланФакт);
	
	ДополнитьТаблицу(ДанныеПоКосвеннымРасходам,ТаблицаДанных);
		
	ТаблицаДанных.Сортировать("ПорядокСортировки_СтатьяЗатрат ВОЗР");  
		
	Возврат ТаблицаДанных;
КонецФункции     
// <Описание функции>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
Функция ПолучениеТаблицыПроцентов(ВидОтчета,тПериодыОтчета,СценарииОтчета,ПризнакРасчета)     
	СтруктураПараметровОтбора   = Новый Структура("ВидОтчета,ПериодОтчета,Сценарий",  
	ВидОтчета,тПериодыОтчета,СценарииОтчета);	
	РаскрываемыеАналитики       = Новый Структура("Аналитика1");	
	тЗначенияПоказателейВидаОтчета = СводнаяТаблицаУХ.ПолучитьЗначениеПоказателей(
	СтруктураПараметровОтбора,РаскрываемыеАналитики);    	
	
	ТаблицаПроцентовАренда = Новый ТаблицаЗначений;    
	Если ПризнакРасчета = "Аренда" Тогда
		ТаблицаПроцентовАренда.Колонки.Добавить("Регион",Новый ОписаниеТипов("СправочникСсылка.ПроизвольныйКлассификаторУХ"));//Регион 
	ИначеЕсли ПризнакРасчета = "КонтактЦентр" Тогда
		ТаблицаПроцентовАренда.Колонки.Добавить("НазначениеПлатежа",Новый ОписаниеТипов("СправочникСсылка.ПроизвольныйКлассификаторУХ"));//НазначениеПлатежа    
	КонецЕсли;
	ТаблицаПроцентовАренда.Колонки.Добавить("Проект",Новый ОписаниеТипов("СправочникСсылка.ПроизвольныйКлассификаторУХ"));//Проект 
	ТаблицаПроцентовАренда.Колонки.Добавить("ПроцентБЛ",Новый ОписаниеТипов("Число"));//ПроцентБЛ
		
	ВладелецСправочника = ПланыВидовХарактеристик.ВидыСубконтоКорпоративные.НайтиПоНаименованию("Проект");
	
	Для Каждого Стр Из тЗначенияПоказателейВидаОтчета Цикл  
		НовСтр = ТаблицаПроцентовАренда.Добавить();	    
		Если ПризнакРасчета = "Аренда" Тогда		
			НовСтр.Регион = Стр.Аналитика1; 
		ИначеЕсли ПризнакРасчета = "КонтактЦентр" Тогда
			НовСтр.НазначениеПлатежа = Стр.Аналитика1;	
		КонецЕсли;
		Если Стр.ПоказательОтчета.Колонка.Наименование = "GМаркет" Тогда
			НовСтр.Проект = Справочники.ПроизвольныйКлассификаторУХ.НайтиПоНаименованию("G-Маркет",,,ВладелецСправочника);     
		ИначеЕсли Стр.ПоказательОтчета.Колонка.Наименование = "Обучение" Или Стр.ПоказательОтчета.Колонка.Наименование = "Поставщики" 
			Или Стр.ПоказательОтчета.Колонка.Наименование = "ЭЦП" Тогда     
			НовСтр.Проект = Справочники.ПроизвольныйКлассификаторУХ.НайтиПоНаименованию(Стр.ПоказательОтчета.Колонка.Наименование,,,ВладелецСправочника);
		Иначе
			НовСтр.Проект = Справочники.ПроизвольныйКлассификаторУХ.НайтиПоНаименованию(Стр.ПоказательОтчета.Колонка.Наименование,,,ВладелецСправочника); 	
		КонецЕсли;
		НовСтр.ПроцентБЛ = Стр.Значение;
	КонецЦикла;    
	
	Возврат ТаблицаПроцентовАренда;
КонецФункции    
// <Описание функции>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
Функция ПолучениеТаблицыЗаполнения(ПризнакТаблицы)  	
	ТаблицаДанныхОтчета = Новый ТаблицаЗначений;     
	ТаблицаДанныхОтчета.Колонки.Добавить("Направление",Новый ОписаниеТипов("Строка"));//Направление
	ТаблицаДанныхОтчета.Колонки.Добавить("Проект",Новый ОписаниеТипов("СправочникСсылка.ПроизвольныйКлассификаторУХ"));//Проект
	ТаблицаДанныхОтчета.Колонки.Добавить("СтатьяЗатрат",Новый ОписаниеТипов("СправочникСсылка.СтатьиЗатрат"));//СтатьяЗатрат  
	ТаблицаДанныхОтчета.Колонки.Добавить("СтатьяЗатратКод",Новый ОписаниеТипов("Строка"));//СтатьяЗатрат
	ТаблицаДанныхОтчета.Колонки.Добавить("СтатьяДоходовРасходов",Новый ОписаниеТипов("СправочникСсылка.СтатьиДоходовИРасходов"));//СтатьяДоходовРасходов
	ТаблицаДанныхОтчета.Колонки.Добавить("НазначениеПлатежа",Новый ОписаниеТипов("СправочникСсылка.ПроизвольныйКлассификаторУХ"));//НазначениеПлатежа
	ТаблицаДанныхОтчета.Колонки.Добавить("Контрагент",Новый ОписаниеТипов("Строка"));//Контрагент
	ТаблицаДанныхОтчета.Колонки.Добавить("Регион",Новый ОписаниеТипов("СправочникСсылка.ПроизвольныйКлассификаторУХ"));//Регион
	ТаблицаДанныхОтчета.Колонки.Добавить("Сумма",Новый ОписаниеТипов("Число"));//Сумма
	ТаблицаДанныхОтчета.Колонки.Добавить("ПериодОтчета",Новый ОписаниеТипов("СправочникСсылка.Периоды")); 
	ТаблицаДанныхОтчета.Колонки.Добавить("ПоказательОтчетаКод",Новый ОписаниеТипов("Строка"));//ПоказательОтчета   
	ТаблицаДанныхОтчета.Колонки.Добавить("КодГруппыВидаОтчета",Новый ОписаниеТипов("Строка"));//ВидОтчетаНаименование    
	ТаблицаДанныхОтчета.Колонки.Добавить("Организация",Новый ОписаниеТипов("СправочникСсылка.Организации"));//Организация	
	ТаблицаДанныхОтчета.Колонки.Добавить("Справочно",Новый ОписаниеТипов("Строка"));//Справочно 
	ТаблицаДанныхОтчета.Колонки.Добавить("РасходыКонтактЦентра",Новый ОписаниеТипов("Булево"));//РасходыКонтактЦентра 		
	ТаблицаДанныхОтчета.Колонки.Добавить("НДС",Новый ОписаниеТипов("Число"));//НДС 
	ТаблицаДанныхОтчета.Колонки.Добавить("НДССумма",Новый ОписаниеТипов("Число"));//НДССумма 
	ТаблицаДанныхОтчета.Колонки.Добавить("ПорядокСортировки_СтатьяЗатрат",Новый ОписаниеТипов("Число"));  
	ТаблицаДанныхОтчета.Колонки.Добавить("ПериодОтчетаРодитель",Новый ОписаниеТипов("СправочникСсылка.Периоды"));  
	ТаблицаДанныхОтчета.Колонки.Добавить("ПериодЗаписи",Новый ОписаниеТипов("Дата"));
	Возврат ТаблицаДанныхОтчета;
КонецФункции    
// <Описание функции>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
Функция ПолучениеТаблицыЗаполненияКосвенные(ПризнакТаблицы)  	
	ТаблицаДанныхОтчета = Новый ТаблицаЗначений;     
	ТаблицаДанныхОтчета.Колонки.Добавить("Направление",Новый ОписаниеТипов("Строка"));//Направление  
	ТаблицаДанныхОтчета.Колонки.Добавить("Проект",Новый ОписаниеТипов("СправочникСсылка.ПроизвольныйКлассификаторУХ"));//Проект  
	ТаблицаДанныхОтчета.Колонки.Добавить("СтатьяЗатрат",Новый ОписаниеТипов("СправочникСсылка.СтатьиЗатрат"));//СтатьяЗатрат 
	ТаблицаДанныхОтчета.Колонки.Добавить("СтатьяЗатратКод",Новый ОписаниеТипов("Строка"));//СтатьяЗатрат
	ТаблицаДанныхОтчета.Колонки.Добавить("Сумма",Новый ОписаниеТипов("Число"));//Сумма
	ТаблицаДанныхОтчета.Колонки.Добавить("ПериодОтчета",Новый ОписаниеТипов("СправочникСсылка.Периоды"));   
	ТаблицаДанныхОтчета.Колонки.Добавить("ПериодОтчетаРодитель",Новый ОписаниеТипов("СправочникСсылка.Периоды"));
	ТаблицаДанныхОтчета.Колонки.Добавить("Организация",Новый ОписаниеТипов("СправочникСсылка.Организации"));//Организация	  
	ТаблицаДанныхОтчета.Колонки.Добавить("ПорядокСортировки_СтатьяЗатрат",Новый ОписаниеТипов("Число"));
    ТаблицаДанныхОтчета.Колонки.Добавить("ПериодЗаписи",Новый ОписаниеТипов("Дата"));   
	
	ТаблицаДанныхОтчета.Колонки.Добавить("СуммаФакт",Новый ОписаниеТипов("Число"));//Сумма

	
	Возврат ТаблицаДанныхОтчета;
КонецФункции 
// <Описание функции>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
Функция ПолучениеПеридовОтчета()    
	тПериодыОтчета  = Новый Массив;
	тПериодыОтчета.Добавить(Справочники.Периоды.НайтиПоНаименованию("Январь 2025 г."));  
	тПериодыОтчета.Добавить(Справочники.Периоды.НайтиПоНаименованию("Февраль 2025 г."));
	тПериодыОтчета.Добавить(Справочники.Периоды.НайтиПоНаименованию("Март 2025 г."));
	тПериодыОтчета.Добавить(Справочники.Периоды.НайтиПоНаименованию("Апрель 2025 г."));
	тПериодыОтчета.Добавить(Справочники.Периоды.НайтиПоНаименованию("Май 2025 г."));
	тПериодыОтчета.Добавить(Справочники.Периоды.НайтиПоНаименованию("Июнь 2025 г."));
	тПериодыОтчета.Добавить(Справочники.Периоды.НайтиПоНаименованию("Июль 2025 г."));
	тПериодыОтчета.Добавить(Справочники.Периоды.НайтиПоНаименованию("Август 2025 г."));
	тПериодыОтчета.Добавить(Справочники.Периоды.НайтиПоНаименованию("Сентябрь 2025 г."));
	тПериодыОтчета.Добавить(Справочники.Периоды.НайтиПоНаименованию("Октябрь 2025 г."));
	тПериодыОтчета.Добавить(Справочники.Периоды.НайтиПоНаименованию("Ноябрь 2025 г."));
	тПериодыОтчета.Добавить(Справочники.Периоды.НайтиПоНаименованию("Декабрь 2025 г."));
	Возврат тПериодыОтчета;
КонецФункции   
// <Описание функции>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
Функция ПолучитьЗначенияОтбора()Экспорт  
	Возврат Справочники.ПроизвольныйКлассификаторУХ.НайтиПоНаименованию("615-ПП");
КонецФункции 
// <Добавляет строку в общий отчет перед выводом>
//
// Параметры:
//  <Стр>  											- <НаборДаных> 		- <Текущая строка данных>
//                 
//  <СтруктураПараметров> 							- <Структура>  		- <Структура дополнительных параметров>
//                  
//  <ТаблицаДанных>  								- <ТаблицаЗначений> - <Текущая таблица, в которую добавляется данные по строкам>
//                 
//  <СоответствиеПроектовБЛ>  						- <Соответствие> 	- <Для приведения технических проектов к общим проектам ГК>
//                 
//  <СоответствияПорядкаСортировкиСтатьиЗатрат>  	- <Соответствие> 	- <Для упорядочивания сортировки по статье затрат>
//                
//
Процедура ДобавлениеСтрокиВОбщийОтчет(Стр,СтруктураПараметров,ТаблицаДанных,СоответствиеПроектовБЛ,СоответствияПорядкаСортировкиСтатьиЗатрат)

	ЭтоВалюта = Ложь;
	Если СокрЛП(Стр.Показатель.Код) = "CAPEX_СуммаМесВалюта" Или СокрЛП(Стр.Показатель.Код) = "ИТПостоянные_СуммаМесВалюта" Тогда  
		ЭтоВалюта = Истина;	
	КонецЕсли;
	    
	
	ПроектБЛ = СоответствиеПроектовБЛ.Получить(СтруктураПараметров.АналитикаПроектНаименование);
	Если СтруктураПараметров.ПризнакПереводаПроекта Тогда    
		АналитикаПроект_Сопоставленная = СтруктураПараметров.ПроектПеревода_Косвенные;	
	Иначе
		АналитикаПроект_Сопоставленная = ?(ПроектБЛ<>Неопределено,ПроектБЛ,СтруктураПараметров.АналитикаПроект); 
	КонецЕсли;   
		
	Если АналитикаПроект_Сопоставленная.Код = "000000006"
		ИЛИ АналитикаПроект_Сопоставленная.Код = "000000038" Тогда  //Косвенные   
		
		НовСтр = СтруктураПараметров.ТаблицаДанных_Косвенные.Добавить();  
		НовСтр.Проект = АналитикаПроект_Сопоставленная;  
		НовСтр.СтатьяЗатрат = Стр.Аналитика2;    
		НовСтр.СтатьяЗатратКод = СокрЛП(Стр.Аналитика2.Код); 
		НовСтр.Направление = ПолучениеПризнакаНаправления(НовСтр,Стр,СтруктураПараметров);
		Если НРег(Стр.Справочно) = "парковка сотрудников" Тогда  
			НовСтр.Сумма = Стр.ЗначениеСуммма * 0.5;	
		Иначе  
			Если Стр.ПравилоОбработки.Наименование = "ИТ_ЦРЭ_Косвенные_Разработка_и_Сопров_ПО_Прогноз (ЦРЭ)" Тогда
				НовСтр.Сумма = ?(СтруктураПараметров.ПроцентБЛ = Неопределено, Стр.ЗначениеСуммма, (Стр.ЗначениеСуммма * СтруктураПараметров.ПроцентБЛ)) * ?(ЭтоВалюта,100,1); 	
			Иначе
				НовСтр.Сумма = ?(СтруктураПараметров.ПроцентБЛ = Неопределено, Стр.ЗначениеСуммма, (Стр.ЗначениеСуммма * СтруктураПараметров.ПроцентБЛ)/ 100) * ?(ЭтоВалюта,100,1);  
			КонецЕсли;
		КонецЕсли;	
		НовСтр.ПериодОтчета = Стр.ПериодОтчета; 
		НовСтр.ПериодЗаписи = НовСтр.ПериодОтчета.ДатаНачала;
		НовСтр.Организация = СтруктураПараметров.Организация;       
		Если Стр.НДС <> NULL Тогда   
			СтрокаНДС = СтруктураПараметров.ТаблицаДанных_Косвенные.Добавить();  
			СтрокаНДС.Проект = НовСтр.Проект;
			СтрокаНДС.Направление = НовСтр.Направление; 
			СтрокаНДС.ПериодОтчета = НовСтр.ПериодОтчета;    
			СтрокаНДС.ПериодОтчетаРодитель = НовСтр.ПериодОтчета.Родитель;
			СтрокаНДС.Организация = НовСтр.Организация;
			СтрокаНДС.Сумма = -(НовСтр.Сумма * Стр.НДС) / (Стр.НДС+1);	
			СтрокаНДС.ПериодЗаписи = СтрокаНДС.ПериодОтчета.ДатаНачала; 
		КонецЕсли;
		Возврат; 		
	КонецЕсли;	
	  	
	НовСтр = ТаблицаДанных.Добавить(); 
	НовСтр.Проект = АналитикаПроект_Сопоставленная;
	//Если Проект ST+НСИ, тогда объединяем его с проектом SalesTech 
	Если НовСтр.Проект.Код = "000000019" Тогда  
		НовСтр.Проект = СтруктураПараметров.SalesTech_Проект;	
	ИначеЕсли НовСтр.Проект.Код = "000000038" Тогда //Польза
		НовСтр.Проект = СтруктураПараметров.ПроектПеревода_Косвенные;   
	ИначеЕсли НовСтр.Проект.Код = "000000012" Тогда //Проектный офис
		НовСтр.Проект = СтруктураПараметров.Поставщики_Проект;	  
	ИначеЕсли НовСтр.Проект.Код = "000000014" Тогда //Проект "Перевод ЦРЭ" 
		НовСтр.Проект = СтруктураПараметров.ПроектПеревода_Косвенные; 	
	КонецЕсли;
	
	//{Воронков А.Д. 06.05.2025
	//Задача: https://tfs.rts-tender.ru/tfs/DefaultCollection/RTS.1C/_workitems/edit/409004/
	Если НовСтр.СтатьяЗатрат.Код =  "00-000021" Тогда //Резерв на отпуск  
		НовСтр.СтатьяЗатрат = Справочники.СтатьиЗатрат.НайтиПоКоду("00-000017");//ФОТ    
		НовСтр.СтатьяЗатратКод = СокрЛП(НовСтр.СтатьяЗатрат.Код); 
		НовСтр.СтатьяДоходовРасходов = Справочники.СтатьиДоходовИРасходов.НайтиПоКоду("00-000064");	//Резерв на отпуск			
	Иначе
		НовСтр.СтатьяЗатрат = Стр.Аналитика2;    
		НовСтр.СтатьяЗатратКод = СокрЛП(Стр.Аналитика2.Код); 	
		НовСтр.СтатьяДоходовРасходов = Стр.Аналитика3;
	КонецЕсли;
	//--}
	
	НовСтр.Направление = ПолучениеПризнакаНаправления(НовСтр,Стр,СтруктураПараметров);      	
	НовСтр.НазначениеПлатежа = Стр.Аналитика4;
	НовСтр.Контрагент = Стр.Аналитика5;
	НовСтр.Регион = Стр.Аналитика6;       
	Если НРег(Стр.Справочно) = "парковка сотрудников" Тогда  
		НовСтр.Сумма = Стр.ЗначениеСуммма * 0.5;	
	Иначе  
		Если Стр.ПравилоОбработки.Наименование = "ИТ_ЦРЭ_Косвенные_Разработка_и_Сопров_ПО_Прогноз (ЦРЭ)" Тогда
			НовСтр.Сумма = ?(СтруктураПараметров.ПроцентБЛ = Неопределено, Стр.ЗначениеСуммма, (Стр.ЗначениеСуммма * СтруктураПараметров.ПроцентБЛ)) * ?(ЭтоВалюта,100,1); 	
		Иначе
			НовСтр.Сумма = ?(СтруктураПараметров.ПроцентБЛ = Неопределено, Стр.ЗначениеСуммма, (Стр.ЗначениеСуммма * СтруктураПараметров.ПроцентБЛ)/ 100) * ?(ЭтоВалюта,100,1);  
		КонецЕсли;
	КонецЕсли;
	НовСтр.ПериодОтчета = Стр.ПериодОтчета; 
	НовСтр.ПериодЗаписи = НовСтр.ПериодОтчета.ДатаНачала;
	НовСтр.ПериодОтчетаРодитель = Стр.ПериодОтчета.Родитель;

	
	НовСтр.КодГруппыВидаОтчета = Стр.КодГруппыВидаОтчета;   				
	НовСтр.Организация = СтруктураПараметров.Организация; 
	
	НовСтр.ПорядокСортировки_СтатьяЗатрат  = СоответствияПорядкаСортировкиСтатьиЗатрат.Получить(Стр.Аналитика2);
	
	//Добавим дополнительно строку с НДС
	Если Стр.НДС <> NULL Тогда     
		ДобавлениеСтрокиНДСВОбщийОтчет(ТаблицаДанных,НовСтр,Стр.НДС);
	КонецЕсли;	
	
КонецПроцедуры // ДобавлениеСтрокиВОбщийОтчет()   
// <Описание функции>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
Функция ПолучениеПризнакаНаправления(НовСтр,Стр,СтруктураПараметров)

	Если НовСтр.СтатьяЗатратКод = "00-000018" ИЛИ НовСтр.СтатьяЗатратКод = "00-000019" Тогда  
		Направление = "Мотивация";   
	ИначеЕсли НовСтр.СтатьяЗатратКод = "00-000017" И Стр.Аналитика3.Код = "00-000053" И СокрЛП(Стр.Показатель.Код) = "Вакансии_ОкладРубGross"  Тогда
		Направление = "OPEX";	 
	ИначеЕсли НовСтр.СтатьяЗатратКод = "00-000017" И Стр.Аналитика3.Код = "00-000053" И СокрЛП(Стр.Показатель.Код) = "Вакансии_ФОТНалоги"  Тогда  
		Направление = "OPEX";
		НовСтр.СтатьяЗатрат = СтруктураПараметров.СтатьяЗатрат_ФОТНалоги;   
		НовСтр.СтатьяЗатратКод = СокрЛП(НовСтр.СтатьяЗатрат.Код);  
	ИначеЕсли НовСтр.СтатьяЗатратКод = "00-000017" И Стр.Аналитика3.Код = "00-000053" Тогда
		Направление = "Мотивация";
		НовСтр.СтатьяЗатрат = СтруктураПараметров.СтатьяЗатрат_Мотивация;   
		НовСтр.СтатьяЗатратКод = СокрЛП(НовСтр.СтатьяЗатрат.Код);  
	ИначеЕсли НовСтр.СтатьяЗатратКод = "00-000011" И Стр.Аналитика3.Код = "00-000008" И СокрЛП(Стр.Показатель.Код) = "ПрочиеАХО1_Расходники" 
		ИЛИ НовСтр.СтатьяЗатратКод = "00-000011" И Стр.Аналитика3.Код = "00-000025" И СокрЛП(Стр.Показатель.Код) = "Питание_Питание" Тогда 
		Направление = "OPEX";
	Иначе
		Направление = "OPEX";	
	КонецЕсли;
	
	Возврат Направление;

КонецФункции // ПолучениеПризнакаНаправления()
// <Описание процедуры>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
//
Процедура ДобавлениеСтрокиНДСВОбщийОтчет(ТаблицаДанных,НовСтр,НДС)
	СтрокаНДС = ТаблицаДанных.Добавить();  
	СтрокаНДС.Проект = НовСтр.Проект;
	СтрокаНДС.СтатьяЗатрат = НовСтр.СтатьяЗатрат; 
	СтрокаНДС.Направление = НовСтр.Направление;
	СтрокаНДС.СтатьяДоходовРасходов = НовСтр.СтатьяДоходовРасходов;
	СтрокаНДС.НазначениеПлатежа = НовСтр.НазначениеПлатежа;   
	СтрокаНДС.Контрагент = "Контрагент НДС"; 
	СтрокаНДС.ПериодОтчета = НовСтр.ПериодОтчета;   
	СтрокаНДС.ПериодЗаписи = СтрокаНДС.ПериодОтчета.ДатаНачала; 
	СтрокаНДС.ПериодОтчетаРодитель = НовСтр.ПериодОтчета.Родитель; 
	СтрокаНДС.Организация = НовСтр.Организация;
	СтрокаНДС.Сумма = -(НовСтр.Сумма * НДС) / (НДС+1);
	СтрокаНДС.ПорядокСортировки_СтатьяЗатрат = НовСтр.ПорядокСортировки_СтатьяЗатрат;
КонецПроцедуры // ДобавлениеСтрокиНДСВОбщийОтчет()
// <Возвращает признак проверки обязательных отоборов в зависимости от пользователя>
// Воронков А.Д.
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
Функция ПолучениеПризнакаПроверкиОбязательныхОтборов(ПризнакПроверки)  
	РольДоступна = ОбщегоПользованияУХ.ЕстьРоль("АдминистраторСистемы",ПользователиКлиентСервер.ТекущийПользователь());    
	Если НЕ РольДоступна Тогда		
		НастройкиОтчета = КомпоновщикНастроек.ПолучитьНастройки();
		СтруктураПроверяемыхНаЗаполнениеОтборов = Новый Структура;
		СтруктураПроверяемыхНаЗаполнениеОтборов.Вставить("Проект",    Новый ПолеКомпоновкиДанных("Проект"));
		
		Для Сч = 0 По НастройкиОтчета.Отбор.Элементы.Количество() - 1 Цикл		
			ЭлементОтбораКомпоновки    = НастройкиОтчета.Отбор.Элементы[Сч];
			ПроверяемоеПолеОтбора        = ЭлементОтбораКомпоновки.ЛевоеЗначение;
			ИмяПроверяемогоПоляОтбора    = СокрЛП(ПроверяемоеПолеОтбора);
			
			Если СтруктураПроверяемыхНаЗаполнениеОтборов.Свойство(ИмяПроверяемогоПоляОтбора) Тогда
				Если Не ЗначениеЗаполнено(ЭлементОтбораКомпоновки.ПравоеЗначение) ИЛИ НЕ ЭлементОтбораКомпоновки.Использование Тогда  
					ОбщегоНазначенияКлиентСерверУХ.СообщитьПользователю("Не заполнено поле отбора - "+ИмяПроверяемогоПоляОтбора);
					Возврат Ложь;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;  
	КонецЕсли;
КонецФункции   
// <Возвращает список значений проектов пользователя информационной базы>
//
// Параметры:
//  <Пользователь>  - <СправочникСсылка.Пользователи> - <Ссылка на пользователя информационной базы>
//               
// Возвращаемое значение:
//   <СписокЗначений>   - <Список значений проектов по заданному пользователю. Если проекты не указаны, возвращается пустой список значений>
//
Функция ПолучениеДанныхПроектовПользователей(Пользователь)

	ЗначенияДляВыбора = Новый СписокЗначений;
	
	Запрос = Новый Запрос; 
	Запрос.УстановитьПараметр("Пользователь", Пользователь);
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПроектыПользователейПроекты.Проект КАК Проект,
		|	ПроектыПользователейПроекты.Ссылка.Организация КАК Организация
		|ИЗ
		|	Справочник.ПроектыПользователей.Проекты КАК ПроектыПользователейПроекты
		|ГДЕ
		|	ПроектыПользователейПроекты.Ссылка.Пользователь = &Пользователь
		|";

		
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	
	Возврат РезультатЗапроса;
	
КонецФункции // ПолучениеДанныхПроектовПользователей()     
// <Возвращает список значений принадлежности кода группы видов отчета к организации>
//
//
// Возвращаемое значение:
//   <СписокЗначений>   - <Список значений принадлежности кода группы видов отчета к организации>
//
Функция ПолучениеСоотвествияВидОтчетаОрагнизационнаяЕдиница()
	
	РТСТ = Справочники.Организации.НайтиПоНаименованию("РТС-ТЕНДЕР ООО");
	ЦРЭ = Справочники.Организации.НайтиПоНаименованию("АО ""ЦРЭ""");
	ОТС = Справочники.Организации.НайтиПоНаименованию("АО ""ОТС""");
	Академия = Справочники.Организации.НайтиПоНаименованию("РТС-АКАДЕМИЯ ООО");
	Холдинг = Справочники.Организации.НайтиПоНаименованию("АО ""РТС-холдинг""");
	Силует = Справочники.Организации.НайтиПоНаименованию("Силуэт");
	Текса = Справочники.Организации.НайтиПоНаименованию("ТЕКСА АО");
	ОЛ = Справочники.Организации.НайтиПоНаименованию("ОБЛАЧНАЯ ЛОГИСТИКА ООО");
	
	
	ТаблСоответсвия = Новый Соответствие;
	ТаблСоответсвия.Вставить("Аренда_Группа_РТС",РТСТ);  
	ТаблСоответсвия.Вставить("ИТПостоянные1",РТСТ);
	ТаблСоответсвия.Вставить("CAPEX_Группа_РТС",РТСТ);
	ТаблСоответсвия.Вставить("ИБ_Группа_РТС",РТСТ);
	ТаблСоответсвия.Вставить("ИТРазработкаИСопровождениеПО1",РТСТ);
	ТаблСоответсвия.Вставить("ИТПостосянные1",РТСТ); 
	ТаблСоответсвия.Вставить("Прочие",РТСТ);
	ТаблСоответсвия.Вставить("ПрочиеКадры",РТСТ); 
	ТаблСоответсвия.Вставить("РазвитиеБизнеса_Группа_РТС",РТСТ); 
	ТаблСоответсвия.Вставить("ЮридическиеРасходы_Группа_РТС",РТСТ); 
	ТаблСоответсвия.Вставить("ИзменениеОклада10",РТСТ);   
	ТаблСоответсвия.Вставить("Вакансии11",РТСТ);
	
	//{ЦРЭ ++
	ТаблСоответсвия.Вставить("Аренда_Группа_ЦРЭ",ЦРЭ);   
	ТаблСоответсвия.Вставить("CAPEX_Группа_ЦРЭ",ЦРЭ);
	ТаблСоответсвия.Вставить("ИБ_Группа_ЦРЭ",ЦРЭ);
	//ТаблСоответсвия.Вставить("ИТРазработкаИСопровождениеПО2",ЦРЭ); //Обрабатываем отдельно
	ТаблСоответсвия.Вставить("ИТПостоянные6",ЦРЭ); 
	ТаблСоответсвия.Вставить("Прочие_ЦРЭ",ЦРЭ);
	ТаблСоответсвия.Вставить("Обучение_Группа_ЦРЭ",ЦРЭ); 
	ТаблСоответсвия.Вставить("РазвитиеБизнеса_Группа_ЦРЭ",ЦРЭ); 
	ТаблСоответсвия.Вставить("ЮридическиеРасходы_Группа_ЦРЭ",ЦРЭ); 
	ТаблСоответсвия.Вставить("ИзменениеОклада11",ЦРЭ);  
	ТаблСоответсвия.Вставить("Вакансии12",ЦРЭ); 
	ТаблСоответсвия.Вставить("МазуринАВГрейдыЦРЭ",ЦРЭ);
	//--}    
	
	//{ОТС ++
	ТаблСоответсвия.Вставить("Аренда_Группа_ОТС",ОТС);   
	ТаблСоответсвия.Вставить("CAPEX_Группа_ОТС",ОТС);
	ТаблСоответсвия.Вставить("ИБ_Группа_ОТС",ОТС);
	ТаблСоответсвия.Вставить("ИТПостоянные7",ОТС);
	ТаблСоответсвия.Вставить("Прочие_ОТС",ОТС);
	ТаблСоответсвия.Вставить("РазвитиеБизнеса_Группа_ОТС",ОТС);
	ТаблСоответсвия.Вставить("ЮридическиеРасходы_Группа_ОТС",ОТС); 
	ТаблСоответсвия.Вставить("ИзменениеОклада12",ОТС); 
	ТаблСоответсвия.Вставить("Вакансии13",ОТС);
	//--}  
	
	//{Академия ++
	ТаблСоответсвия.Вставить("Аренда",Академия);   
	ТаблСоответсвия.Вставить("ИТПостоянные2",Академия);
	ТаблСоответсвия.Вставить("РазвитиеБизнеса",Академия);
	ТаблСоответсвия.Вставить("ЮридическиеРасходы",Академия);  
	ТаблСоответсвия.Вставить("ИзменениеОклада14",Академия); 
	//--}   
	
	//{Холдинг ++
	ТаблСоответсвия.Вставить("Аренда3",Холдинг);   
	ТаблСоответсвия.Вставить("ИТПостоянные5",Холдинг);
	ТаблСоответсвия.Вставить("ЮридическиеРасходы3",Холдинг);
	ТаблСоответсвия.Вставить("ИзменениеОклада17",Холдинг);
	//--}  
	
	//{Силует ++
	ТаблСоответсвия.Вставить("Аренда1",Силует);   
	ТаблСоответсвия.Вставить("ИТПостоянные3",Силует);
	ТаблСоответсвия.Вставить("ЮридическиеРасходы1",Силует); 
	ТаблСоответсвия.Вставить("ИзменениеОклада15",Силует);
	//--}   
	
	//{Текса ++
	ТаблСоответсвия.Вставить("Аренда2",Текса);   
	ТаблСоответсвия.Вставить("ИТПостоянные4",Текса);
	ТаблСоответсвия.Вставить("РазвитиеБизнесаТекса",Текса);
	ТаблСоответсвия.Вставить("ЮридическиеРасходы2",Текса);
	ТаблСоответсвия.Вставить("ИзменениеОклада16",Текса);
	//--}          
	
	//{ОЛ ++
	ТаблСоответсвия.Вставить("ИзменениеОклада13",ОЛ);  
	ТаблСоответсвия.Вставить("Аренда_Группа_ОЛ",ОЛ);    
	//--}

	
	Возврат ТаблСоответсвия;	
КонецФункции // ПолучениеСоотвествияВидОтчетаОрагнизационнаяЕдиница()
// <Возвращает список значений принаджлежности технического проекта к обобщенному проекту по группе компаний>
//
//
// Возвращаемое значение:
//   <СписокЗначений>   - <Список значений принаджлежности технического проекта к обобщенному проекту по группе компаний>
//
Функция СоответствиеПроектовБЛ()
    ВладелецСправочника = ПланыВидовХарактеристик.ВидыСубконтоКорпоративные.НайтиПоНаименованию("Проект");

	СоответствиеПроектов = Новый Соответствие;    
	СоответствиеПроектов.Вставить("Sales Tech3",Справочники.ПроизвольныйКлассификаторУХ.НайтиПоНаименованию("Sales Tech",,,ВладелецСправочника));    
	СоответствиеПроектов.Вставить("ST+НСИ2",Справочники.ПроизвольныйКлассификаторУХ.НайтиПоНаименованию("ST+НСИ",,,ВладелецСправочника));
	СоответствиеПроектов.Вставить("Капитал2",Справочники.ПроизвольныйКлассификаторУХ.НайтиПоНаименованию("Капитал",,,ВладелецСправочника));
	СоответствиеПроектов.Вставить("Капитал3",Справочники.ПроизвольныйКлассификаторУХ.НайтиПоНаименованию("Капитал",,,ВладелецСправочника));
	СоответствиеПроектов.Вставить("Косвенные2",Справочники.ПроизвольныйКлассификаторУХ.НайтиПоНаименованию("Косвенные",,,ВладелецСправочника));
	СоответствиеПроектов.Вставить("Косвенные4",Справочники.ПроизвольныйКлассификаторУХ.НайтиПоНаименованию("Косвенные",,,ВладелецСправочника));
	СоответствиеПроектов.Вставить("Поставщики2",Справочники.ПроизвольныйКлассификаторУХ.НайтиПоНаименованию("Поставщики",,,ВладелецСправочника));
	
    Возврат СоответствиеПроектов;
КонецФункции // СоответствиеПроектовБЛ()
// <Возвращает массив кодов групп отчетов для формирования отчета>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <Массив кодов групп отчетов>
//
Функция ПолучениеМассиваКодовГруппОтчетов()

	МассивКодовГруппОтчетов = Новый Массив; 
	//{РТСТ ++   
	МассивКодовГруппОтчетов.Добавить("Аренда_Группа_РТС"); 
	МассивКодовГруппОтчетов.Добавить("CAPEX_Группа_РТС");  
	МассивКодовГруппОтчетов.Добавить("ИБ_Группа_РТС"); 
	МассивКодовГруппОтчетов.Добавить("ИТРазработкаИСопровождениеПО1");   
	МассивКодовГруппОтчетов.Добавить("ИТПостоянные1");
	МассивКодовГруппОтчетов.Добавить("Прочие");    
	МассивКодовГруппОтчетов.Добавить("ПрочиеКадры");
	МассивКодовГруппОтчетов.Добавить("ЮридическиеРасходы_Группа_РТС");
	МассивКодовГруппОтчетов.Добавить("РазвитиеБизнеса_Группа_РТС");     
	МассивКодовГруппОтчетов.Добавить("ИзменениеОклада10");  
	МассивКодовГруппОтчетов.Добавить("Вакансии11");

	//--}
	
	//{ЦРЭ ++   
	МассивКодовГруппОтчетов.Добавить("Аренда_Группа_ЦРЭ");
	МассивКодовГруппОтчетов.Добавить("CAPEX_Группа_ЦРЭ");  
	МассивКодовГруппОтчетов.Добавить("ИБ_Группа_ЦРЭ"); 
	//МассивКодовГруппОтчетов.Добавить("ИТРазработкаИСопровождениеПО2"); //Обрабатываем отдельно 
	МассивКодовГруппОтчетов.Добавить("ИТПостоянные6");
	МассивКодовГруппОтчетов.Добавить("Прочие_ЦРЭ");
	МассивКодовГруппОтчетов.Добавить("РазвитиеБизнеса_Группа_ЦРЭ");   
	МассивКодовГруппОтчетов.Добавить("ЮридическиеРасходы_Группа_ЦРЭ");
	МассивКодовГруппОтчетов.Добавить("ИзменениеОклада11");   
	МассивКодовГруппОтчетов.Добавить("Вакансии12"); 
	МассивКодовГруппОтчетов.Добавить("МазуринАВГрейдыЦРЭ");	
	//--}   
	
	//{ОТС ++   
	МассивКодовГруппОтчетов.Добавить("Аренда_Группа_ОТС"); 
	МассивКодовГруппОтчетов.Добавить("CAPEX_Группа_ОТС");  
	МассивКодовГруппОтчетов.Добавить("ИБ_Группа_ОТС"); 
	МассивКодовГруппОтчетов.Добавить("ИТПостоянные7");   
	МассивКодовГруппОтчетов.Добавить("Прочие_ОТС");
	МассивКодовГруппОтчетов.Добавить("РазвитиеБизнеса_Группа_ОТС");  
	МассивКодовГруппОтчетов.Добавить("ЮридическиеРасходы_Группа_ОТС");
	МассивКодовГруппОтчетов.Добавить("ИзменениеОклада12"); 
	МассивКодовГруппОтчетов.Добавить("Вакансии13");
	//--}  
	
	//{РТС-А ++ 
	МассивКодовГруппОтчетов.Добавить("Аренда");
	МассивКодовГруппОтчетов.Добавить("ИТПостоянные2");  
	МассивКодовГруппОтчетов.Добавить("РазвитиеБизнеса"); 
	МассивКодовГруппОтчетов.Добавить("ЮридическиеРасходы");
	МассивКодовГруппОтчетов.Добавить("ИзменениеОклада14");
	//--}  
	
	//{Холдинг ++ 
	МассивКодовГруппОтчетов.Добавить("Аренда3");
	МассивКодовГруппОтчетов.Добавить("ИТПостоянные5");  
	МассивКодовГруппОтчетов.Добавить("ЮридическиеРасходы3");  
	МассивКодовГруппОтчетов.Добавить("ИзменениеОклада17");
	//--}    
	
	//{Силуэт ++ 
	МассивКодовГруппОтчетов.Добавить("Аренда1"); 
	МассивКодовГруппОтчетов.Добавить("ИТПостоянные3");  
	МассивКодовГруппОтчетов.Добавить("ЮридическиеРасходы1"); 
	МассивКодовГруппОтчетов.Добавить("ИзменениеОклада15"); 
	//--}

    //{Текса ++    
	МассивКодовГруппОтчетов.Добавить("Аренда2");
	МассивКодовГруппОтчетов.Добавить("ИТПостоянные4");  
	МассивКодовГруппОтчетов.Добавить("РазвитиеБизнесаТекса");  
	МассивКодовГруппОтчетов.Добавить("ЮридическиеРасходы2");  
	МассивКодовГруппОтчетов.Добавить("ИзменениеОклада16"); 	
	//--}  
	
	//{ОЛ ++
	МассивКодовГруппОтчетов.Добавить("ИзменениеОклада13"); 
	МассивКодовГруппОтчетов.Добавить("Аренда_Группа_ОЛ");
	//--}


	Возврат МассивКодовГруппОтчетов;

КонецФункции // ПолучениеМассиваКодовГруппОтчетов()
// <Возращает текст запроса по показателям>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Строка>   - <Текст запроса>
//
Функция ТекстЗапросаПоПоказателям()

	Возврат "ВЫБРАТЬ
	        |	ЗначенияПоказателейОтчетов6.Показатель КАК Показатель,
	        |	ЗначенияПоказателейОтчетов6.Аналитика1 КАК Аналитика1,
	        |	ЗначенияПоказателейОтчетов6.Аналитика2 КАК Аналитика2,
	        |	ЗначенияПоказателейОтчетов6.Аналитика3 КАК Аналитика3,
	        |	ЗначенияПоказателейОтчетов6.Аналитика4 КАК Аналитика4,
	        |	ЗначенияПоказателейОтчетов6.Аналитика5 КАК Аналитика5,
	        |	ЗначенияПоказателейОтчетов6.Аналитика6 КАК Аналитика6,
	        |	СУММА(ЗначенияПоказателейОтчетов6.Значение) КАК Значение,
	        |	ЗначенияПоказателейОтчетов6.Версия.ПериодОтчета КАК ВерсияПериодОтчета,
	        |	ЗначенияПоказателейОтчетов6.ПравилоОбработки КАК ПравилоОбработки,
	        |	ЗначенияПоказателейОтчетов6.ПравилоОбработки.Владелец КАК ПравилоОбработкиВладелец
	        |ПОМЕСТИТЬ ВТ_Аренда
	        |ИЗ
	        |	РегистрСведений.ЗначенияПоказателейОтчетов6 КАК ЗначенияПоказателейОтчетов6
	        |ГДЕ
	        |	ЗначенияПоказателейОтчетов6.Показатель.Код В(&ПоказателиЧисловые)
	        |	И ЗначенияПоказателейОтчетов6.ПравилоОбработки.Владелец.Родитель.Код В(&МассивПравилОбработки)
	        |	И НЕ ЗначенияПоказателейОтчетов6.ПравилоОбработки.Наименование В (&МассивПравилОбработки_НеВключаемВОтчет)
	        |
	        |СГРУППИРОВАТЬ ПО
	        |	ЗначенияПоказателейОтчетов6.Показатель,
	        |	ЗначенияПоказателейОтчетов6.Аналитика1,
	        |	ЗначенияПоказателейОтчетов6.Аналитика2,
	        |	ЗначенияПоказателейОтчетов6.Аналитика3,
	        |	ЗначенияПоказателейОтчетов6.Аналитика4,
	        |	ЗначенияПоказателейОтчетов6.Аналитика5,
	        |	ЗначенияПоказателейОтчетов6.Аналитика6,
	        |	ЗначенияПоказателейОтчетов6.Версия.ПериодОтчета,
	        |	ЗначенияПоказателейОтчетов6.ПравилоОбработки,
	        |	ЗначенияПоказателейОтчетов6.ПравилоОбработки.Владелец
	        |
	        |ИМЕЮЩИЕ
	        |	СУММА(ЗначенияПоказателейОтчетов6.Значение) <> 0
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ
	        |	ЗначенияПоказателейОтчетов6.Показатель КАК Показатель,
	        |	ЗначенияПоказателейОтчетов6.Аналитика1 КАК Аналитика1,
	        |	ЗначенияПоказателейОтчетов6.Аналитика2 КАК Аналитика2,
	        |	ЗначенияПоказателейОтчетов6.Аналитика3 КАК Аналитика3,
	        |	ЗначенияПоказателейОтчетов6.Аналитика4 КАК Аналитика4,
	        |	ЗначенияПоказателейОтчетов6.Аналитика5 КАК Аналитика5,
	        |	ЗначенияПоказателейОтчетов6.Аналитика6 КАК Аналитика6,
	        |	СУММА(ЗначенияПоказателейОтчетов6.Значение) КАК Значение,
	        |	ЗначенияПоказателейОтчетов6.Версия.ПериодОтчета КАК ВерсияПериодОтчета,
	        |	ЗначенияПоказателейОтчетов6.ПравилоОбработки КАК ПравилоОбработки,
	        |	ЗначенияПоказателейОтчетов6.Показатель.Код КАК ПоказательКод,
	        |	ЗначенияПоказателейОтчетов6.ПравилоОбработки.Владелец.Родитель.Код КАК ПравилоОбработкиВладелецРодительКод,
	        |	ЗначенияПоказателейОтчетов6.ПравилоОбработки.Владелец КАК ПравилоОбработкиВладелец,
	        |	ЗначенияПоказателейОтчетов6.Показатель.Владелец КАК ПоказательВладелец
	        |ПОМЕСТИТЬ ВТ_НДС
	        |ИЗ
	        |	РегистрСведений.ЗначенияПоказателейОтчетов6 КАК ЗначенияПоказателейОтчетов6
	        |ГДЕ
	        |	ЗначенияПоказателейОтчетов6.Показатель.Код В(&ПоказателиНДС)
	        |	И ЗначенияПоказателейОтчетов6.ПравилоОбработки.Владелец.Родитель.Код В(&МассивПравилОбработки)
	        |	И ЗначенияПоказателейОтчетов6.Значение <> 0
	        |	И ЗначенияПоказателейОтчетов6.ПравилоОбработки.Наименование <> ""Полиграфия_РТС_Деп.АХО_Косвенные_Прогноз (РТС)""
	        |	И НЕ ЗначенияПоказателейОтчетов6.ПравилоОбработки.Наименование В (&МассивПравилОбработки_НеВключаемВОтчет)
	        |	И ЗначенияПоказателейОтчетов6.Версия.ПериодОтчета = &ПериодПолученияНДС
	        |
	        |СГРУППИРОВАТЬ ПО
	        |	ЗначенияПоказателейОтчетов6.Показатель,
	        |	ЗначенияПоказателейОтчетов6.Аналитика1,
	        |	ЗначенияПоказателейОтчетов6.Аналитика2,
	        |	ЗначенияПоказателейОтчетов6.Аналитика3,
	        |	ЗначенияПоказателейОтчетов6.Аналитика4,
	        |	ЗначенияПоказателейОтчетов6.Аналитика5,
	        |	ЗначенияПоказателейОтчетов6.Аналитика6,
	        |	ЗначенияПоказателейОтчетов6.Версия.ПериодОтчета,
	        |	ЗначенияПоказателейОтчетов6.ПравилоОбработки,
	        |	ЗначенияПоказателейОтчетов6.Показатель.Код,
	        |	ЗначенияПоказателейОтчетов6.ПравилоОбработки.Владелец.Родитель.Код,
	        |	ЗначенияПоказателейОтчетов6.ПравилоОбработки.Владелец,
	        |	ЗначенияПоказателейОтчетов6.Показатель.Владелец
	        |
	        |ИМЕЮЩИЕ
	        |	СУММА(ЗначенияПоказателейОтчетов6.Значение) <> 0
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ
	        |	ЗначенияПоказателейОтчетовНечисловые.Показатель КАК Показатель,
	        |	ЗначенияПоказателейОтчетовНечисловые.Аналитика1 КАК Аналитика1,
	        |	ЗначенияПоказателейОтчетовНечисловые.Аналитика2 КАК Аналитика2,
	        |	ЗначенияПоказателейОтчетовНечисловые.Аналитика3 КАК Аналитика3,
	        |	ЗначенияПоказателейОтчетовНечисловые.Аналитика4 КАК Аналитика4,
	        |	ЗначенияПоказателейОтчетовНечисловые.Аналитика5 КАК Аналитика5,
	        |	ЗначенияПоказателейОтчетовНечисловые.Аналитика6 КАК Аналитика6,
	        |	ЗначенияПоказателейОтчетовНечисловые.Версия.ПериодОтчета КАК ВерсияПериодОтчета,
	        |	ЗначенияПоказателейОтчетовНечисловые.Значение КАК Значение,
	        |	ЗначенияПоказателейОтчетовНечисловые.ПравилоОбработки КАК ПравилоОбработки,
	        |	ЗначенияПоказателейОтчетовНечисловые.ПравилоОбработки.Владелец КАК ПравилоОбработкиВладелец,
	        |	ЗначенияПоказателейОтчетовНечисловые.Показатель.Владелец КАК ПоказательВладелец
	        |ПОМЕСТИТЬ ВТ_Справочно_Аренда
	        |ИЗ
	        |	РегистрСведений.ЗначенияПоказателейОтчетовНечисловые КАК ЗначенияПоказателейОтчетовНечисловые
	        |ГДЕ
	        |	ЗначенияПоказателейОтчетовНечисловые.Показатель.Код В(&ПоказателиСтроковые)
	        |	И ЗначенияПоказателейОтчетовНечисловые.ПравилоОбработки.Владелец.Родитель.Код В(&МассивПравилОбработки)
	        |	И ЗначенияПоказателейОтчетовНечисловые.Версия.ОсновнаяВерсия
	        |	И ЗначенияПоказателейОтчетовНечисловые.Версия.ПериодОтчета = &ПериодПолученияНДС
	        |
	        |СГРУППИРОВАТЬ ПО
	        |	ЗначенияПоказателейОтчетовНечисловые.Показатель,
	        |	ЗначенияПоказателейОтчетовНечисловые.Аналитика1,
	        |	ЗначенияПоказателейОтчетовНечисловые.Аналитика2,
	        |	ЗначенияПоказателейОтчетовНечисловые.Аналитика3,
	        |	ЗначенияПоказателейОтчетовНечисловые.Аналитика4,
	        |	ЗначенияПоказателейОтчетовНечисловые.Аналитика5,
	        |	ЗначенияПоказателейОтчетовНечисловые.Аналитика6,
	        |	ЗначенияПоказателейОтчетовНечисловые.Версия.ПериодОтчета,
	        |	ЗначенияПоказателейОтчетовНечисловые.Значение,
	        |	ЗначенияПоказателейОтчетовНечисловые.ПравилоОбработки,
	        |	ЗначенияПоказателейОтчетовНечисловые.ПравилоОбработки.Владелец,
	        |	ЗначенияПоказателейОтчетовНечисловые.Показатель.Владелец
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ
	        |	ЗначенияПоказателейОтчетовНечисловые.Показатель КАК Показатель,
	        |	ЗначенияПоказателейОтчетовНечисловые.Аналитика1 КАК Аналитика1,
	        |	ЗначенияПоказателейОтчетовНечисловые.Аналитика2 КАК Аналитика2,
	        |	ЗначенияПоказателейОтчетовНечисловые.Аналитика3 КАК Аналитика3,
	        |	ЗначенияПоказателейОтчетовНечисловые.Аналитика4 КАК Аналитика4,
	        |	ЗначенияПоказателейОтчетовНечисловые.Аналитика5 КАК Аналитика5,
	        |	ЗначенияПоказателейОтчетовНечисловые.Аналитика6 КАК Аналитика6,
	        |	ЗначенияПоказателейОтчетовНечисловые.Версия.ПериодОтчета КАК ВерсияПериодОтчета,
	        |	ЗначенияПоказателейОтчетовНечисловые.Значение КАК Значение,
	        |	ЗначенияПоказателейОтчетовНечисловые.ПравилоОбработки КАК ПравилоОбработки,
	        |	ЗначенияПоказателейОтчетовНечисловые.ПравилоОбработки.Владелец КАК ПравилоОбработкиВладелец,
	        |	ЗначенияПоказателейОтчетовНечисловые.Показатель.Владелец КАК ПоказательВладелец
	        |ПОМЕСТИТЬ ВТ_РасходыКонтактЦентра_Аренда
	        |ИЗ
	        |	РегистрСведений.ЗначенияПоказателейОтчетовНечисловые КАК ЗначенияПоказателейОтчетовНечисловые
	        |ГДЕ
	        |	ЗначенияПоказателейОтчетовНечисловые.Показатель.Код В(&ПоказателиБулево)
	        |	И ЗначенияПоказателейОтчетовНечисловые.ПравилоОбработки.Владелец.Родитель.Код В(&МассивПравилОбработки)
	        |	И ЗначенияПоказателейОтчетовНечисловые.Значение = ИСТИНА
	        |	И ЗначенияПоказателейОтчетовНечисловые.Версия.ПериодОтчета = &ПериодПолученияНДС
	        |
	        |СГРУППИРОВАТЬ ПО
	        |	ЗначенияПоказателейОтчетовНечисловые.Показатель,
	        |	ЗначенияПоказателейОтчетовНечисловые.Аналитика1,
	        |	ЗначенияПоказателейОтчетовНечисловые.Аналитика2,
	        |	ЗначенияПоказателейОтчетовНечисловые.Аналитика3,
	        |	ЗначенияПоказателейОтчетовНечисловые.Аналитика4,
	        |	ЗначенияПоказателейОтчетовНечисловые.Аналитика5,
	        |	ЗначенияПоказателейОтчетовНечисловые.Аналитика6,
	        |	ЗначенияПоказателейОтчетовНечисловые.Версия.ПериодОтчета,
	        |	ЗначенияПоказателейОтчетовНечисловые.Значение,
	        |	ЗначенияПоказателейОтчетовНечисловые.ПравилоОбработки,
	        |	ЗначенияПоказателейОтчетовНечисловые.ПравилоОбработки.Владелец,
	        |	ЗначенияПоказателейОтчетовНечисловые.Показатель.Владелец
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ
	        |	ВТ_Аренда.Показатель КАК Показатель,
	        |	ВТ_Аренда.Аналитика1 КАК Аналитика1,
	        |	ВТ_Аренда.Аналитика2 КАК Аналитика2,
	        |	ВТ_Аренда.Аналитика3 КАК Аналитика3,
	        |	ВТ_Аренда.Аналитика4 КАК Аналитика4,
	        |	ВТ_Аренда.Аналитика5 КАК Аналитика5,
	        |	ВТ_Аренда.Аналитика6 КАК Аналитика6,
	        |	ВТ_Аренда.Значение КАК ЗначениеСуммма,
	        |	ВТ_Аренда.ВерсияПериодОтчета КАК ВерсияПериодОтчета,
	        |	ВТ_Аренда.ПравилоОбработки КАК ПравилоОбработки,
	        |	ВТ_Справочно_Аренда.Значение КАК Справочно,
	        |	ВТ_РасходыКонтактЦентра_Аренда.Значение КАК РасходыКонтактЦентра,
	        |	ВТ_Аренда.ПравилоОбработки.Владелец.Родитель.Код КАК КодГруппыВидаОтчета,
	        |	ВТ_НДС.Значение КАК НДС
	        |ПОМЕСТИТЬ ВТ_Итог_Аренда
	        |ИЗ
	        |	ВТ_Аренда КАК ВТ_Аренда
	        |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Справочно_Аренда КАК ВТ_Справочно_Аренда
	        |		ПО ВТ_Аренда.ПравилоОбработкиВладелец = ВТ_Справочно_Аренда.ПоказательВладелец
	        |			И ВТ_Аренда.Аналитика1 = ВТ_Справочно_Аренда.Аналитика1
	        |			И ВТ_Аренда.Аналитика2 = ВТ_Справочно_Аренда.Аналитика2
	        |			И ВТ_Аренда.Аналитика3 = ВТ_Справочно_Аренда.Аналитика3
	        |			И ВТ_Аренда.Аналитика4 = ВТ_Справочно_Аренда.Аналитика4
	        |			И ВТ_Аренда.Аналитика5 = ВТ_Справочно_Аренда.Аналитика5
	        |			И ВТ_Аренда.Аналитика6 = ВТ_Справочно_Аренда.Аналитика6
	        |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РасходыКонтактЦентра_Аренда КАК ВТ_РасходыКонтактЦентра_Аренда
	        |		ПО ВТ_Аренда.ПравилоОбработкиВладелец = ВТ_РасходыКонтактЦентра_Аренда.ПоказательВладелец
	        |			И ВТ_Аренда.Аналитика1 = ВТ_РасходыКонтактЦентра_Аренда.Аналитика1
	        |			И ВТ_Аренда.Аналитика2 = ВТ_РасходыКонтактЦентра_Аренда.Аналитика2
	        |			И ВТ_Аренда.Аналитика3 = ВТ_РасходыКонтактЦентра_Аренда.Аналитика3
	        |			И ВТ_Аренда.Аналитика4 = ВТ_РасходыКонтактЦентра_Аренда.Аналитика4
	        |			И ВТ_Аренда.Аналитика5 = ВТ_РасходыКонтактЦентра_Аренда.Аналитика5
	        |			И ВТ_Аренда.Аналитика6 = ВТ_РасходыКонтактЦентра_Аренда.Аналитика6
	        |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_НДС КАК ВТ_НДС
	        |		ПО ВТ_Аренда.ПравилоОбработкиВладелец = ВТ_НДС.ПоказательВладелец
	        |			И ВТ_Аренда.Аналитика1 = ВТ_НДС.Аналитика1
	        |			И ВТ_Аренда.Аналитика2 = ВТ_НДС.Аналитика2
	        |			И ВТ_Аренда.Аналитика3 = ВТ_НДС.Аналитика3
	        |			И ВТ_Аренда.Аналитика4 = ВТ_НДС.Аналитика4
	        |			И ВТ_Аренда.Аналитика5 = ВТ_НДС.Аналитика5
	        |			И ВТ_Аренда.Аналитика6 = ВТ_НДС.Аналитика6
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ
	        |	ВТ_Итог_Аренда.Показатель КАК Показатель,
	        |	ВТ_Итог_Аренда.Аналитика1 КАК Аналитика1,
	        |	ВТ_Итог_Аренда.Аналитика2 КАК Аналитика2,
	        |	ВТ_Итог_Аренда.Аналитика3 КАК Аналитика3,
	        |	ВТ_Итог_Аренда.Аналитика4 КАК Аналитика4,
	        |	ВТ_Итог_Аренда.Аналитика5 КАК Аналитика5,
	        |	ВТ_Итог_Аренда.Аналитика6 КАК Аналитика6,
	        |	ВТ_Итог_Аренда.ЗначениеСуммма КАК ЗначениеСуммма,
	        |	ВТ_Итог_Аренда.ВерсияПериодОтчета КАК ПериодОтчета,
	        |	ВТ_Итог_Аренда.ПравилоОбработки КАК ПравилоОбработки,
	        |	ВЫБОР
	        |		КОГДА ВТ_Итог_Аренда.Справочно ЕСТЬ NULL
	        |			ТОГДА """"
	        |		ИНАЧЕ ВТ_Итог_Аренда.Справочно
	        |	КОНЕЦ КАК Справочно,
	        |	ВЫБОР
	        |		КОГДА ВТ_Итог_Аренда.РасходыКонтактЦентра ЕСТЬ NULL
	        |			ТОГДА ЛОЖЬ
	        |		ИНАЧЕ ВТ_Итог_Аренда.РасходыКонтактЦентра
	        |	КОНЕЦ КАК РасходыКонтактЦентра,
	        |	ВЫБОР
	        |		КОГДА ВТ_Итог_Аренда.НДС = 20
	        |			ТОГДА 0.2
	        |		ИНАЧЕ ВЫБОР
	        |				КОГДА ВТ_Итог_Аренда.НДС = 0.4
	        |					ТОГДА 0.2
	        |				ИНАЧЕ ВТ_Итог_Аренда.НДС
	        |			КОНЕЦ
	        |	КОНЕЦ КАК НДС,
	        |	ВТ_Итог_Аренда.КодГруппыВидаОтчета КАК КодГруппыВидаОтчета,
	        |	ВТ_Итог_Аренда.ПравилоОбработки.Владелец.Наименование КАК ВидОтчета
	        |ИЗ
	        |	ВТ_Итог_Аренда КАК ВТ_Итог_Аренда
	        |
	        |УПОРЯДОЧИТЬ ПО
	        |	Аналитика1,
	        |	Аналитика2,
	        |	Аналитика3,
	        |	Аналитика4,
	        |	Аналитика5,
	        |	Аналитика6";	

КонецФункции // ТекстЗапросаПоПоказателям()  
// <Описание функции>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
Функция ПроверкаНовогоЗапроса() 	
	Возврат "ВЫБРАТЬ
	        |	ЗначенияПоказателейОтчетов6.Показатель КАК Показатель,
	        |	ЗначенияПоказателейОтчетов6.Аналитика1 КАК Аналитика1,
	        |	ЗначенияПоказателейОтчетов6.Аналитика2 КАК Аналитика2,
	        |	ЗначенияПоказателейОтчетов6.Аналитика3 КАК Аналитика3,
	        |	ЗначенияПоказателейОтчетов6.Аналитика4 КАК Аналитика4,
	        |	ЗначенияПоказателейОтчетов6.Аналитика5 КАК Аналитика5,
	        |	ЗначенияПоказателейОтчетов6.Аналитика6 КАК Аналитика6,
	        |	СУММА(ЗначенияПоказателейОтчетов6.Значение) КАК Значение,
	        |	ЗначенияПоказателейОтчетов6.Версия.ПериодОтчета КАК ВерсияПериодОтчета,
	        |	ЗначенияПоказателейОтчетов6.ПравилоОбработки КАК ПравилоОбработки,
	        |	ЗначенияПоказателейОтчетов6.ПравилоОбработки.Владелец КАК ПравилоОбработкиВладелец
	        |ПОМЕСТИТЬ ВТ_Аренда
	        |ИЗ
	        |	РегистрСведений.ЗначенияПоказателейОтчетов6 КАК ЗначенияПоказателейОтчетов6
	        |ГДЕ
	        |	ЗначенияПоказателейОтчетов6.Показатель.Код В(&ПоказателиЧисловые)
	        |	И ЗначенияПоказателейОтчетов6.ПравилоОбработки.Владелец.Родитель.Код В(&МассивПравилОбработки)
	        |	И НЕ ЗначенияПоказателейОтчетов6.ПравилоОбработки.Наименование В (&МассивПравилОбработки_НеВключаемВОтчет)
	        |
	        |СГРУППИРОВАТЬ ПО
	        |	ЗначенияПоказателейОтчетов6.Показатель,
	        |	ЗначенияПоказателейОтчетов6.Аналитика1,
	        |	ЗначенияПоказателейОтчетов6.Аналитика2,
	        |	ЗначенияПоказателейОтчетов6.Аналитика3,
	        |	ЗначенияПоказателейОтчетов6.Аналитика4,
	        |	ЗначенияПоказателейОтчетов6.Аналитика5,
	        |	ЗначенияПоказателейОтчетов6.Аналитика6,
	        |	ЗначенияПоказателейОтчетов6.Версия.ПериодОтчета,
	        |	ЗначенияПоказателейОтчетов6.ПравилоОбработки,
	        |	ЗначенияПоказателейОтчетов6.ПравилоОбработки.Владелец
	        |
	        |ИМЕЮЩИЕ
	        |	СУММА(ЗначенияПоказателейОтчетов6.Значение) <> 0
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ
	        |	ЗначенияПоказателейОтчетов6.Показатель КАК Показатель,
	        |	ЗначенияПоказателейОтчетов6.Аналитика1 КАК Аналитика1,
	        |	ЗначенияПоказателейОтчетов6.Аналитика2 КАК Аналитика2,
	        |	ЗначенияПоказателейОтчетов6.Аналитика3 КАК Аналитика3,
	        |	ЗначенияПоказателейОтчетов6.Аналитика4 КАК Аналитика4,
	        |	ЗначенияПоказателейОтчетов6.Аналитика5 КАК Аналитика5,
	        |	ЗначенияПоказателейОтчетов6.Аналитика6 КАК Аналитика6,
	        |	СУММА(ЗначенияПоказателейОтчетов6.Значение) КАК Значение,
	        |	ЗначенияПоказателейОтчетов6.Версия.ПериодОтчета КАК ВерсияПериодОтчета,
	        |	ЗначенияПоказателейОтчетов6.ПравилоОбработки КАК ПравилоОбработки,
	        |	ЗначенияПоказателейОтчетов6.Показатель.Код КАК ПоказательКод,
	        |	ЗначенияПоказателейОтчетов6.ПравилоОбработки.Владелец.Родитель.Код КАК ПравилоОбработкиВладелецРодительКод,
	        |	ЗначенияПоказателейОтчетов6.ПравилоОбработки.Владелец КАК ПравилоОбработкиВладелец,
	        |	ЗначенияПоказателейОтчетов6.Показатель.Владелец КАК ПоказательВладелец
	        |ПОМЕСТИТЬ ВТ_НДС
	        |ИЗ
	        |	РегистрСведений.ЗначенияПоказателейОтчетов6 КАК ЗначенияПоказателейОтчетов6
	        |ГДЕ
	        |	ЗначенияПоказателейОтчетов6.Показатель.Код В(&ПоказателиНДС)
	        |	И ЗначенияПоказателейОтчетов6.ПравилоОбработки.Владелец.Родитель.Код В(&МассивПравилОбработки)
	        |	И ЗначенияПоказателейОтчетов6.Значение <> 0
	        |	И ЗначенияПоказателейОтчетов6.ПравилоОбработки.Наименование <> ""Полиграфия_РТС_Деп.АХО_Косвенные_Прогноз (РТС)""
	        |	И НЕ ЗначенияПоказателейОтчетов6.ПравилоОбработки.Наименование В (&МассивПравилОбработки_НеВключаемВОтчет)
	        |	И ЗначенияПоказателейОтчетов6.Версия.ПериодОтчета = &ПериодПолученияНДС
	        |
	        |СГРУППИРОВАТЬ ПО
	        |	ЗначенияПоказателейОтчетов6.Показатель,
	        |	ЗначенияПоказателейОтчетов6.Аналитика1,
	        |	ЗначенияПоказателейОтчетов6.Аналитика2,
	        |	ЗначенияПоказателейОтчетов6.Аналитика3,
	        |	ЗначенияПоказателейОтчетов6.Аналитика4,
	        |	ЗначенияПоказателейОтчетов6.Аналитика5,
	        |	ЗначенияПоказателейОтчетов6.Аналитика6,
	        |	ЗначенияПоказателейОтчетов6.Версия.ПериодОтчета,
	        |	ЗначенияПоказателейОтчетов6.ПравилоОбработки,
	        |	ЗначенияПоказателейОтчетов6.Показатель.Код,
	        |	ЗначенияПоказателейОтчетов6.ПравилоОбработки.Владелец.Родитель.Код,
	        |	ЗначенияПоказателейОтчетов6.ПравилоОбработки.Владелец,
	        |	ЗначенияПоказателейОтчетов6.Показатель.Владелец
	        |
	        |ИМЕЮЩИЕ
	        |	СУММА(ЗначенияПоказателейОтчетов6.Значение) <> 0
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ
	        |	ЗначенияПоказателейОтчетовНечисловые.Показатель КАК Показатель,
	        |	ЗначенияПоказателейОтчетовНечисловые.Аналитика1 КАК Аналитика1,
	        |	ЗначенияПоказателейОтчетовНечисловые.Аналитика2 КАК Аналитика2,
	        |	ЗначенияПоказателейОтчетовНечисловые.Аналитика3 КАК Аналитика3,
	        |	ЗначенияПоказателейОтчетовНечисловые.Аналитика4 КАК Аналитика4,
	        |	ЗначенияПоказателейОтчетовНечисловые.Аналитика5 КАК Аналитика5,
	        |	ЗначенияПоказателейОтчетовНечисловые.Аналитика6 КАК Аналитика6,
	        |	ЗначенияПоказателейОтчетовНечисловые.Версия.ПериодОтчета КАК ВерсияПериодОтчета,
	        |	ЗначенияПоказателейОтчетовНечисловые.Значение КАК Значение,
	        |	ЗначенияПоказателейОтчетовНечисловые.ПравилоОбработки КАК ПравилоОбработки,
	        |	ЗначенияПоказателейОтчетовНечисловые.ПравилоОбработки.Владелец КАК ПравилоОбработкиВладелец,
	        |	ЗначенияПоказателейОтчетовНечисловые.Показатель.Владелец КАК ПоказательВладелец
	        |ПОМЕСТИТЬ ВТ_Справочно_Аренда
	        |ИЗ
	        |	РегистрСведений.ЗначенияПоказателейОтчетовНечисловые КАК ЗначенияПоказателейОтчетовНечисловые
	        |ГДЕ
	        |	ЗначенияПоказателейОтчетовНечисловые.Показатель.Код В(&ПоказателиСтроковые)
	        |	И ЗначенияПоказателейОтчетовНечисловые.ПравилоОбработки.Владелец.Родитель.Код В(&МассивПравилОбработки)
	        |	И ЗначенияПоказателейОтчетовНечисловые.Версия.ОсновнаяВерсия
	        |	И ЗначенияПоказателейОтчетовНечисловые.Версия.ПериодОтчета = &ПериодПолученияНДС
	        |
	        |СГРУППИРОВАТЬ ПО
	        |	ЗначенияПоказателейОтчетовНечисловые.Показатель,
	        |	ЗначенияПоказателейОтчетовНечисловые.Аналитика1,
	        |	ЗначенияПоказателейОтчетовНечисловые.Аналитика2,
	        |	ЗначенияПоказателейОтчетовНечисловые.Аналитика3,
	        |	ЗначенияПоказателейОтчетовНечисловые.Аналитика4,
	        |	ЗначенияПоказателейОтчетовНечисловые.Аналитика5,
	        |	ЗначенияПоказателейОтчетовНечисловые.Аналитика6,
	        |	ЗначенияПоказателейОтчетовНечисловые.Версия.ПериодОтчета,
	        |	ЗначенияПоказателейОтчетовНечисловые.Значение,
	        |	ЗначенияПоказателейОтчетовНечисловые.ПравилоОбработки,
	        |	ЗначенияПоказателейОтчетовНечисловые.ПравилоОбработки.Владелец,
	        |	ЗначенияПоказателейОтчетовНечисловые.Показатель.Владелец
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ
	        |	ЗначенияПоказателейОтчетовНечисловые.Показатель КАК Показатель,
	        |	ЗначенияПоказателейОтчетовНечисловые.Аналитика1 КАК Аналитика1,
	        |	ЗначенияПоказателейОтчетовНечисловые.Аналитика2 КАК Аналитика2,
	        |	ЗначенияПоказателейОтчетовНечисловые.Аналитика3 КАК Аналитика3,
	        |	ЗначенияПоказателейОтчетовНечисловые.Аналитика4 КАК Аналитика4,
	        |	ЗначенияПоказателейОтчетовНечисловые.Аналитика5 КАК Аналитика5,
	        |	ЗначенияПоказателейОтчетовНечисловые.Аналитика6 КАК Аналитика6,
	        |	ЗначенияПоказателейОтчетовНечисловые.Версия.ПериодОтчета КАК ВерсияПериодОтчета,
	        |	ЗначенияПоказателейОтчетовНечисловые.Значение КАК Значение,
	        |	ЗначенияПоказателейОтчетовНечисловые.ПравилоОбработки КАК ПравилоОбработки,
	        |	ЗначенияПоказателейОтчетовНечисловые.ПравилоОбработки.Владелец КАК ПравилоОбработкиВладелец,
	        |	ЗначенияПоказателейОтчетовНечисловые.Показатель.Владелец КАК ПоказательВладелец
	        |ПОМЕСТИТЬ ВТ_РасходыКонтактЦентра_Аренда
	        |ИЗ
	        |	РегистрСведений.ЗначенияПоказателейОтчетовНечисловые КАК ЗначенияПоказателейОтчетовНечисловые
	        |ГДЕ
	        |	ЗначенияПоказателейОтчетовНечисловые.Показатель.Код В(&ПоказателиБулево)
	        |	И ЗначенияПоказателейОтчетовНечисловые.ПравилоОбработки.Владелец.Родитель.Код В(&МассивПравилОбработки)
	        |	И ЗначенияПоказателейОтчетовНечисловые.Значение = ИСТИНА
	        |	И ЗначенияПоказателейОтчетовНечисловые.Версия.ПериодОтчета = &ПериодПолученияНДС
	        |
	        |СГРУППИРОВАТЬ ПО
	        |	ЗначенияПоказателейОтчетовНечисловые.Показатель,
	        |	ЗначенияПоказателейОтчетовНечисловые.Аналитика1,
	        |	ЗначенияПоказателейОтчетовНечисловые.Аналитика2,
	        |	ЗначенияПоказателейОтчетовНечисловые.Аналитика3,
	        |	ЗначенияПоказателейОтчетовНечисловые.Аналитика4,
	        |	ЗначенияПоказателейОтчетовНечисловые.Аналитика5,
	        |	ЗначенияПоказателейОтчетовНечисловые.Аналитика6,
	        |	ЗначенияПоказателейОтчетовНечисловые.Версия.ПериодОтчета,
	        |	ЗначенияПоказателейОтчетовНечисловые.Значение,
	        |	ЗначенияПоказателейОтчетовНечисловые.ПравилоОбработки,
	        |	ЗначенияПоказателейОтчетовНечисловые.ПравилоОбработки.Владелец,
	        |	ЗначенияПоказателейОтчетовНечисловые.Показатель.Владелец
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ
	        |	ВТ_Аренда.Показатель КАК Показатель,
	        |	ВТ_Аренда.Аналитика1 КАК Аналитика1,
	        |	ВТ_Аренда.Аналитика2 КАК Аналитика2,
	        |	ВТ_Аренда.Аналитика3 КАК Аналитика3,
	        |	ВТ_Аренда.Аналитика4 КАК Аналитика4,
	        |	ВТ_Аренда.Аналитика5 КАК Аналитика5,
	        |	ВТ_Аренда.Аналитика6 КАК Аналитика6,
	        |	ВТ_Аренда.Значение КАК ЗначениеСуммма,
	        |	ВТ_Аренда.ВерсияПериодОтчета КАК ПериодОтчета,
	        |	ВТ_Аренда.ПравилоОбработки КАК ПравилоОбработки,
	        |	ВЫБОР
	        |		КОГДА ВТ_Справочно_Аренда.Значение ЕСТЬ NULL
	        |			ТОГДА """"
	        |		ИНАЧЕ ВТ_Справочно_Аренда.Значение
	        |	КОНЕЦ КАК Справочно,
	        |	ВЫБОР
	        |		КОГДА ВТ_РасходыКонтактЦентра_Аренда.Значение ЕСТЬ NULL
	        |			ТОГДА ЛОЖЬ
	        |		ИНАЧЕ ВТ_РасходыКонтактЦентра_Аренда.Значение
	        |	КОНЕЦ КАК РасходыКонтактЦентра,
	        |	ВТ_Аренда.ПравилоОбработки.Владелец.Родитель.Код КАК КодГруппыВидаОтчета,
	        |	ВЫБОР
	        |		КОГДА ВТ_НДС.Значение = 20
	        |			ТОГДА 0.2
	        |		ИНАЧЕ ВЫБОР
	        |				КОГДА ВТ_НДС.Значение = 0.4
	        |					ТОГДА ВТ_НДС.Значение = 0.2
	        |				ИНАЧЕ ВТ_НДС.Значение
	        |			КОНЕЦ
	        |	КОНЕЦ КАК НДС,
	        |	ВТ_Аренда.ПравилоОбработки.Наименование КАК ВидОтчета
	        |ИЗ
	        |	ВТ_Аренда КАК ВТ_Аренда
	        |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Справочно_Аренда КАК ВТ_Справочно_Аренда
	        |		ПО ВТ_Аренда.ПравилоОбработкиВладелец = ВТ_Справочно_Аренда.ПоказательВладелец
	        |			И ВТ_Аренда.Аналитика1 = ВТ_Справочно_Аренда.Аналитика1
	        |			И ВТ_Аренда.Аналитика2 = ВТ_Справочно_Аренда.Аналитика2
	        |			И ВТ_Аренда.Аналитика3 = ВТ_Справочно_Аренда.Аналитика3
	        |			И ВТ_Аренда.Аналитика4 = ВТ_Справочно_Аренда.Аналитика4
	        |			И ВТ_Аренда.Аналитика5 = ВТ_Справочно_Аренда.Аналитика5
	        |			И ВТ_Аренда.Аналитика6 = ВТ_Справочно_Аренда.Аналитика6
	        |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РасходыКонтактЦентра_Аренда КАК ВТ_РасходыКонтактЦентра_Аренда
	        |		ПО ВТ_Аренда.ПравилоОбработкиВладелец = ВТ_РасходыКонтактЦентра_Аренда.ПоказательВладелец
	        |			И ВТ_Аренда.Аналитика1 = ВТ_РасходыКонтактЦентра_Аренда.Аналитика1
	        |			И ВТ_Аренда.Аналитика2 = ВТ_РасходыКонтактЦентра_Аренда.Аналитика2
	        |			И ВТ_Аренда.Аналитика3 = ВТ_РасходыКонтактЦентра_Аренда.Аналитика3
	        |			И ВТ_Аренда.Аналитика4 = ВТ_РасходыКонтактЦентра_Аренда.Аналитика4
	        |			И ВТ_Аренда.Аналитика5 = ВТ_РасходыКонтактЦентра_Аренда.Аналитика5
	        |			И ВТ_Аренда.Аналитика6 = ВТ_РасходыКонтактЦентра_Аренда.Аналитика6
	        |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_НДС КАК ВТ_НДС
	        |		ПО ВТ_Аренда.ПравилоОбработкиВладелец = ВТ_НДС.ПоказательВладелец
	        |			И ВТ_Аренда.Аналитика1 = ВТ_НДС.Аналитика1
	        |			И ВТ_Аренда.Аналитика2 = ВТ_НДС.Аналитика2
	        |			И ВТ_Аренда.Аналитика3 = ВТ_НДС.Аналитика3
	        |			И ВТ_Аренда.Аналитика4 = ВТ_НДС.Аналитика4
	        |			И ВТ_Аренда.Аналитика5 = ВТ_НДС.Аналитика5
	        |			И ВТ_Аренда.Аналитика6 = ВТ_НДС.Аналитика6
	        |ГДЕ
	        |	ВЫБОР
	        |			КОГДА ВТ_Аренда.ВерсияПериодОтчета.ДатаНачала = ДАТАВРЕМЯ(1, 1, 1)
	        |				ТОГДА ИСТИНА
	        |			ИНАЧЕ ВТ_Аренда.ВерсияПериодОтчета.ДатаНачала МЕЖДУ &НачПер И &КонПер
	        |		КОНЕЦ
	        |
	        |УПОРЯДОЧИТЬ ПО
	        |	Аналитика1,
	        |	Аналитика2,
	        |	Аналитика3,
	        |	Аналитика4,
	        |	Аналитика5,
	        |	Аналитика6";

	
КонецФункции
// <Описание функции>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
Функция МассивЭООбрабатываемыхОтдельно()
		
	СоответсвиеЭО = Новый Соответствие; 
	СоответсвиеЭО.Вставить("Сводный отчет Изменение окладов Многопериодный (ЦРЭ)","ПоПоказателю");
	СоответсвиеЭО.Вставить("Командировочные_Представительские_Косвенные_Прогноз (ЦРЭ)","ПоАналитике"); 
	СоответсвиеЭО.Вставить("ИТ_ЦРЭ_Косвенные_Постоянные_Прогноз (ЦРЭ)","ПоАналитике");
    СоответсвиеЭО.Вставить("Сводный отчет Изменение окладов Многопериодный (ОТС)","ПоПоказателю");
                      
    Возврат СоответсвиеЭО;	

КонецФункции // СоответсвиеЭООбрабатываемыхОтдельно()
// <Описание функции>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
Функция ПолучениеПоказателейЧисловых()
	МассивПоказателиЧисловые = Новый Массив;
	МассивПоказателиЧисловые.Добавить("CAPEX_СуммаМесРубСНДС");
	МассивПоказателиЧисловые.Добавить("ИзменениеОкладов_СуммаРуб"); 
	МассивПоказателиЧисловые.Добавить("ИзменениеОклада_СуммаМесРубСНДС");
	МассивПоказателиЧисловые.Добавить("ИТПостоянные_СуммаМесРубСНДС");
	МассивПоказателиЧисловые.Добавить("OPEX_СуммаМесРубСНДС");
	МассивПоказателиЧисловые.Добавить("Аренда_СуммаМесРубСНДС");
	МассивПоказателиЧисловые.Добавить("CAPEX_СуммаМесВалюта");
	МассивПоказателиЧисловые.Добавить("ИТПостоянные_СуммаМесВалюта"); 
	МассивПоказателиЧисловые.Добавить("Вакансии_СреднеПремияРубGross");
	МассивПоказателиЧисловые.Добавить("Вакансии_ОкладРубGross"); 
	МассивПоказателиЧисловые.Добавить("ИТ_ИТ");   
	МассивПоказателиЧисловые.Добавить("ПрочиеАХО1_Расходники");
	МассивПоказателиЧисловые.Добавить("Питание_Питание");  
	МассивПоказателиЧисловые.Добавить("Вакансии_ФОТНалоги");
	Возврат МассивПоказателиЧисловые; 
КонецФункции // ПолучениеПоказателейЧисловых()
// <Описание функции>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
Функция ПолучениеПоказателейБулево()
	МассивПоказателиБулево = Новый Массив;
	МассивПоказателиБулево.Добавить("CAPEX_РасходыКонтактЦентра"); 
	МассивПоказателиБулево.Добавить("Аренда_РасходыКонтактЦентра");
    МассивПоказателиБулево.Добавить("ИТПостоянные_РасходыКонтактЦентра");	
    Возврат МассивПоказателиБулево; 
КонецФункции // ПолучениеПоказателейБулево()
// <Описание функции>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
Функция ПолучениеПоказателейСтроковые()
	МассивПоказателиСтроковые = Новый Массив;
	МассивПоказателиСтроковые.Добавить("Аренда_Справочно");
	МассивПоказателиСтроковые.Добавить("ИзменениеОкладов_ПроектТрансферт");	
    Возврат МассивПоказателиСтроковые;
КонецФункции // ПолучениеПоказателейСтроковые()  
// <Описание функции>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
Функция ПолучениеПоказателейНДС()
	МассивПоказателиСтроковые = Новый Массив;
	МассивПоказателиСтроковые.Добавить("Аренда_НДС");
	МассивПоказателиСтроковые.Добавить("CAPEX_НДС");
	МассивПоказателиСтроковые.Добавить("OPEX_НДС");
	МассивПоказателиСтроковые.Добавить("ИТПостоянные_НДС");
    Возврат МассивПоказателиСтроковые;	
КонецФункции // ПолучениеПоказателейНДС()
// <Описание функции>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
Функция ПолучениеЭОНеВключаемыхВОбщийОтчет()
	МассивПравилОбработки_НеВключаемВОтчет = Новый Массив;
	МассивПравилОбработки_НеВключаемВОтчет.Добавить("ИТ_РиСПО_Капитал_ЦРЭ_РТС_Прогноз (РТС)");	
	МассивПравилОбработки_НеВключаемВОтчет.Добавить("Аренда_ЦРЭ_ЦФО и ПФО_Процентный расхУУ_Прогноз (ЦРЭ)");   
	МассивПравилОбработки_НеВключаемВОтчет.Добавить("ФОТ_Прогноз (ОЛ)");
	Возврат МассивПравилОбработки_НеВключаемВОтчет;
КонецФункции // ПолучениеЭОНеВключаемыхВОбщийОтчет() 
// <Описание процедуры>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
//
Процедура ОбработаемОтдельноОтчетыИзГруппы_ИТРазработкаИСопровождениеПО2(ТаблицаДанных,ТаблицаДанных_Косвенные,ДатаНачалаОтчета,ДатаОкончанияОтчета)

	СценарииОтчета = Справочники.Сценарии.НайтиПоНаименованию("Сценарий месячный (2025 год)"); 
	тПериодыОтчета = Справочники.Периоды.НайтиПоНаименованию("2025 г.");
	СтруктураПараметровОтбора   = Новый Структура("ВидОтчета,ПериодОтчета,Сценарий",  
	Справочники.ВидыОтчетов.НайтиПоКоду("РПРазработкаПрогнозЦРЭ"),тПериодыОтчета,СценарииОтчета);	
	РаскрываемыеАналитики       = Новый Структура("Аналитика1,Аналитика2,Аналитика3");	
	тЗначенияПоказателейВидаОтчета = СводнаяТаблицаУХ.ПолучитьЗначениеПоказателей(
	СтруктураПараметровОтбора,РаскрываемыеАналитики);    	
	
	ТаблицаПроцентов = Новый ТаблицаЗначений;       
	ТаблицаПроцентов.Колонки.Добавить("Контрагент",Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));//Контрагент
	ТаблицаПроцентов.Колонки.Добавить("Проект",Новый ОписаниеТипов("СправочникСсылка.ПроизвольныйКлассификаторУХ"));//Проект 
	ТаблицаПроцентов.Колонки.Добавить("ПроцентБЛ",Новый ОписаниеТипов("Число"));//ПроцентБЛ
	
	ВладелецСправочника = ПланыВидовХарактеристик.ВидыСубконтоКорпоративные.НайтиПоНаименованию("Проект");
	
	Для Каждого Стр Из тЗначенияПоказателейВидаОтчета Цикл  
		НовСтр = ТаблицаПроцентов.Добавить();	    
		НовСтр.Контрагент = Стр.Аналитика3;    
		
		Если Стр.ПоказательОтчета.Колонка.Наименование = "GМаркет" Тогда
			НовСтр.Проект = Справочники.ПроизвольныйКлассификаторУХ.НайтиПоНаименованию("G-Маркет",,,ВладелецСправочника);     
		ИначеЕсли Стр.ПоказательОтчета.Колонка.Наименование = "Обучение" Или Стр.ПоказательОтчета.Колонка.Наименование = "Поставщики" 
			Или Стр.ПоказательОтчета.Колонка.Наименование = "ЭЦП" Тогда     
			НовСтр.Проект = Справочники.ПроизвольныйКлассификаторУХ.НайтиПоНаименованию(Стр.ПоказательОтчета.Колонка.Наименование,,,ВладелецСправочника);
		Иначе
			НовСтр.Проект = Справочники.ПроизвольныйКлассификаторУХ.НайтиПоНаименованию(Стр.ПоказательОтчета.Колонка.Наименование,,,ВладелецСправочника); 	
		КонецЕсли;
		НовСтр.ПроцентБЛ = Стр.Значение;
	КонецЦикла; 
	
	СоответствиеПроектовБЛ = СоответствиеПроектовБЛ();
	Организация = Справочники.Организации.НайтиПоНаименованию("АО ""ЦРЭ""");
	
	МассивКодовГруппОтчетов = Новый Массив;
	МассивКодовГруппОтчетов.Добавить("ИТРазработкаИСопровождениеПО2");   	
	МассивПравилОбработки_НеВключаемВОтчет = Новый Массив;   
	ПоказателиБулево = Новый Массив;
	ПоказателиСтроковые = Новый Массив; 
	
	ПоказателиЧисловые = Новый Массив;
	ПоказателиЧисловые.Добавить("CAPEX_СуммаМесРубСНДС");  
	
	ПоказателиНДС = Новый Массив;    
	ПоказателиНДС.Добавить("CAPEX_НДС");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивПравилОбработки", МассивКодовГруппОтчетов);   
	Запрос.УстановитьПараметр("МассивПравилОбработки_НеВключаемВОтчет", МассивПравилОбработки_НеВключаемВОтчет = Новый Массив);	
	Запрос.УстановитьПараметр("ПоказателиБулево", ПоказателиБулево = Новый Массив);
	Запрос.УстановитьПараметр("ПоказателиСтроковые", ПоказателиСтроковые = Новый Массив);
	Запрос.УстановитьПараметр("ПоказателиЧисловые", ПоказателиЧисловые);      
	Запрос.УстановитьПараметр("ПоказателиНДС", ПоказателиНДС);    
	Запрос.УстановитьПараметр("ПериодПолученияНДС",Справочники.Периоды.НайтиПоНаименованию("Январь 2025 г."));    
	Запрос.УстановитьПараметр("НачПер",ДатаНачалаОтчета); 
	Запрос.УстановитьПараметр("КонПер",ДатаОкончанияОтчета);
 
	Запрос.Текст = ПроверкаНовогоЗапроса();  
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();   
	
	СоответствияПорядкаСортировкиСтатьиЗатрат = ПолучениеСоответствияПорядкаСортировкиСтатьиЗатрат();
	
	SalesTech_Проект = Справочники.ПроизвольныйКлассификаторУХ.НайтиПоНаименованию("Sales Tech",,,ВладелецСправочника); 
	Поставщики_Проект = Справочники.ПроизвольныйКлассификаторУХ.НайтиПоНаименованию("Поставщики",,,ВладелецСправочника);

	Для Каждого Стр Из РезультатЗапроса Цикл   
		
		СтруктураОтбора = Новый Структура("Контрагент",Стр.Аналитика5);
		МассивОтобранныхСтрок = ТаблицаПроцентов.НайтиСтроки(СтруктураОтбора);
		
		Если МассивОтобранныхСтрок.Количество() > 0 Тогда       
			Для Каждого Эл Из МассивОтобранныхСтрок Цикл   
				
				АналитикаПроектНаименование = Эл.Проект.Наименование;
				АналитикаПроект = Эл.Проект; 
				ПроцентБЛ = Эл.ПроцентБЛ;
				
				СтруктураПараметров = Новый Структура("АналитикаПроектНаименование,АналитикаПроект,ПроцентБЛ,ПризнакПереводаПроекта,ПроектПеревода_Косвенные,Организация,SalesTech_Проект,Поставщики_Проект",
				АналитикаПроектНаименование,АналитикаПроект,ПроцентБЛ,Ложь,Неопределено,Организация,SalesTech_Проект,Поставщики_Проект);
				
				ДобавлениеСтрокиВОбщийОтчет(Стр,СтруктураПараметров,ТаблицаДанных,СоответствиеПроектовБЛ,СоответствияПорядкаСортировкиСтатьиЗатрат);    
				
			КонецЦикла;
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры // ОбработаемОтдельноОтчетыИзГруппы_ИТРазработкаИСопровождениеПО2()
// <Описание функции>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
Функция ПолучениеСоответствияКомпанийВГО()		
	РТСТ = Справочники.Организации.НайтиПоНаименованию("РТС-ТЕНДЕР ООО");
	ЦРЭ = Справочники.Организации.НайтиПоНаименованию("АО ""ЦРЭ""");
	ОТС = Справочники.Организации.НайтиПоНаименованию("АО ""ОТС""");
	Академия = Справочники.Организации.НайтиПоНаименованию("РТС-АКАДЕМИЯ ООО");
	Холдинг = Справочники.Организации.НайтиПоНаименованию("АО ""РТС-холдинг""");
	Силует = Справочники.Организации.НайтиПоНаименованию("Силуэт");
	Текса = Справочники.Организации.НайтиПоНаименованию("ТЕКСА АО");
	
	СоответствиеВГО = Новый Соответствие;
	СоответствиеВГО.Вставить("РТС-ТЕНДЕР ООО_ВГО",РТСТ); 
	СоответствиеВГО.Вставить("РТС-ТЕНДЕР ООО_ВГО",Академия);
	СоответствиеВГО.Вставить("РТС-ТЕНДЕР ООО_ВГО",Холдинг);  
	СоответствиеВГО.Вставить("РТС-ТЕНДЕР ООО_ВГО",Силует);
	СоответствиеВГО.Вставить("РТС-ТЕНДЕР ООО_ВГО",Текса);
    СоответствиеВГО.Вставить("РТС-ТЕНДЕР ООО_ВГО",ОТС);
	СоответствиеВГО.Вставить("ЦРЭ АО_ВГО",ЦРЭ);	
	Возврат СоответствиеВГО;
КонецФункции // ПолучениеТаблицыСоответствийВГО()
// <Описание функции>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
Функция ПолучениеСоответствияПорядкаСортировкиСтатьиЗатрат()
	СоответствиеПорядкаСортировкиСтатьиЗатрат	= Новый Соответствие;
	СоответствиеПорядкаСортировкиСтатьиЗатрат.Вставить(Справочники.СтатьиЗатрат.НайтиПоКоду("00-000017"),1); //ФОТ	
	СоответствиеПорядкаСортировкиСтатьиЗатрат.Вставить(Справочники.СтатьиЗатрат.НайтиПоКоду("РТ-000040"),2); //ФОТ Налоги    
	СоответствиеПорядкаСортировкиСтатьиЗатрат.Вставить(Справочники.СтатьиЗатрат.НайтиПоКоду("ТЕ-000017"),3); //Аренда
	СоответствиеПорядкаСортировкиСтатьиЗатрат.Вставить(Справочники.СтатьиЗатрат.НайтиПоКоду("00-000012"),4); //ИТ  
	СоответствиеПорядкаСортировкиСтатьиЗатрат.Вставить(Справочники.СтатьиЗатрат.НайтиПоКоду("РТ-000018"),5); //Развитие бизнеса   
	СоответствиеПорядкаСортировкиСтатьиЗатрат.Вставить(Справочники.СтатьиЗатрат.НайтиПоКоду("00-000018"),6); //Мотивация
	СоответствиеПорядкаСортировкиСтатьиЗатрат.Вставить(Справочники.СтатьиЗатрат.НайтиПоКоду("00-000019"),7); //Годовой бонус 
	СоответствиеПорядкаСортировкиСтатьиЗатрат.Вставить(Справочники.СтатьиЗатрат.НайтиПоКоду("00-000011"),8); //Прочие
	СоответствиеПорядкаСортировкиСтатьиЗатрат.Вставить(Справочники.СтатьиЗатрат.НайтиПоКоду("00-000020"),9); //Косвенные расходы
    Возврат СоответствиеПорядкаСортировкиСтатьиЗатрат;
КонецФункции // ПолучениеМассиваПорядкаСортировкиСтатьиЗатрат()        
// <Описание функции>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
Функция РассчитаемКосвенныеРасходыОтдельно(ТаблицаДанных_Косвенные,ТаблицаПроцентов_РаспределениеКосвенные,СоответствияПорядкаСортировкиСтатьиЗатрат,ПризнакРасчетаПланФакт)
	
	КосвенныеРасходы_СтатьяЗатрат = Справочники.СтатьиЗатрат.НайтиПоКоду("00-000020");
	
	ТаблицаДанныхОтчета = Новый ТаблицаЗначений;     
	ТаблицаДанныхОтчета.Колонки.Добавить("Направление",Новый ОписаниеТипов("Строка"));//Направление
	ТаблицаДанныхОтчета.Колонки.Добавить("Проект",Новый ОписаниеТипов("СправочникСсылка.ПроизвольныйКлассификаторУХ"));//Проект
	ТаблицаДанныхОтчета.Колонки.Добавить("Сумма",Новый ОписаниеТипов("Число"));//Сумма
	ТаблицаДанныхОтчета.Колонки.Добавить("ПериодОтчета",Новый ОписаниеТипов("СправочникСсылка.Периоды"));   
	ТаблицаДанныхОтчета.Колонки.Добавить("Организация",Новый ОписаниеТипов("СправочникСсылка.Организации"));//Организация		
	ТаблицаДанныхОтчета.Колонки.Добавить("СтатьяЗатрат",Новый ОписаниеТипов("СправочникСсылка.СтатьиЗатрат"));//СтатьяЗатрат   
	ТаблицаДанныхОтчета.Колонки.Добавить("ПорядокСортировки_СтатьяЗатрат",Новый ОписаниеТипов("Число"));//СтатьяЗатрат
	ТаблицаДанныхОтчета.Колонки.Добавить("ПериодЗаписи",Новый ОписаниеТипов("Дата"));    	
	ТаблицаДанныхОтчета.Колонки.Добавить("СуммаФакт",Новый ОписаниеТипов("Число"));//Сумма
	
	ТаблицаОрганизаций = ТаблицаДанных_Косвенные.Скопировать();
	ТаблицаОрганизаций.Свернуть("Организация");   
	
	ТаблицаПроектов = ТаблицаПроцентов_РаспределениеКосвенные.Скопировать();
	ТаблицаПроектов.Свернуть("Проект,Организация");      
	
	
	ТаблицаЗатрат = Новый ТаблицаЗначений;
	ТаблицаЗатрат.Колонки.Добавить("Затраты",Новый ОписаниеТипов("Строка"));
	
	НовСтрЗатр = ТаблицаЗатрат.Добавить();
	НовСтрЗатр.Затраты = "OPEX"; 
	
	НовСтрЗатр = ТаблицаЗатрат.Добавить();
	НовСтрЗатр.Затраты = "Мотивация";      
	
	Для Каждого СтрОрг Из ТаблицаОрганизаций Цикл   
		
		СтруктураОтбораПроектов = Новый Структура("Организация",СтрОрг.Организация);	
		МассивПроектов = ТаблицаПроектов.НайтиСтроки(СтруктураОтбораПроектов); 
		Если МассивПроектов.Количество() > 0 Тогда   
			
			Для Каждого ЭлПроект Из МассивПроектов Цикл   
				
				СуммаНарастающая = 0;
				СуммаПроцентовНарастающая = 0; 
				
				Для Каждого СтрЗтр Из ТаблицаЗатрат Цикл
					
					СтруктураОтбораДанных = Новый Структура("Организация,Направление",СтрОрг.Организация,СтрЗтр.Затраты);    
					МассивДанных = ТаблицаДанных_Косвенные.НайтиСТроки(СтруктураОтбораДанных);    
					
					//СтруктураОтбораДанных = Новый Структура("Организация",СтрОрг.Организация);    
					//МассивДанных = ТаблицаДанных_Косвенные.НайтиСТроки(СтруктураОтбораДанных); 

					
					Если МассивДанных.Количество() > 0 Тогда  
						
						Для Каждого ЭлДанных Из МассивДанных Цикл  
							
							СтруктураОтобораПроцентов = Новый Структура("Организация,Проект,ПериодОтчета",ЭлДанных.Организация,ЭлПроект.Проект,ЭлДанных.ПериодОтчета);	
							ДанныеПроцентовЗаМесяц = ТаблицаПроцентов_РаспределениеКосвенные.НайтиСтроки(СтруктураОтобораПроцентов);   
							
							Если ДанныеПроцентовЗаМесяц.Количество() > 0 Тогда    
								
								ПроцентЗаМесяц = ДанныеПроцентовЗаМесяц[0].ПроцентБЛ;
							Иначе     
								СуммаНарастающая = СуммаНарастающая + ЭлДанных[ПризнакРасчетаПланФакт]; 
								//СуммаНарастающая = СуммаНарастающая + ЭлДанных.Сумма;
								//СуммаНарастающая = СуммаНарастающая + ?(ПризнакРасчетаПланФакт = "План",ЭлДанных.Сумма,ЭлДанных.СуммаФакт);
								Продолжить;
							КонецЕсли;  
							
							НовСтр = ТаблицаДанныхОтчета.Добавить();
							НовСтр.Направление = ЭлДанных.Направление; 
							НовСтр.Проект = ЭлПроект.Проект;  						
							НовСтр.СтатьяЗатрат = КосвенныеРасходы_СтатьяЗатрат;
							СуммаЗаМесяц = ЭлДанных[ПризнакРасчетаПланФакт]; 
							//СуммаЗаМесяц = ЭлДанных.Сумма; 
							//СуммаЗаМесяц = ?(ПризнакРасчетаПланФакт = "План",ЭлДанных.Сумма,ЭлДанных.СуммаФакт);    
							
							НовСтр[ПризнакРасчетаПланФакт] = ((СуммаНарастающая + СуммаЗаМесяц) * ПроцентЗаМесяц) - СуммаПроцентовНарастающая; 
							//НовСтр.Сумма = ((СуммаНарастающая + СуммаЗаМесяц) * ПроцентЗаМесяц) - СуммаПроцентовНарастающая;
							НовСтр.ПериодОтчета = ЭлДанных.ПериодОтчета;    
							НовСтр.ПериодЗаписи = НовСтр.ПериодОтчета.ДатаНачала; 
							НовСтр.Организация = ЭлДанных.Организация;  
							
							НовСтр.ПорядокСортировки_СтатьяЗатрат  = СоответствияПорядкаСортировкиСтатьиЗатрат.Получить(НовСтр.СтатьяЗатрат);
							
							
							СуммаПроцентовНарастающая = СуммаПроцентовНарастающая + НовСтр[ПризнакРасчетаПланФакт];  
							//СуммаПроцентовНарастающая = СуммаПроцентовНарастающая + НовСтр.Сумма;
							//СуммаПроцентовНарастающая = СуммаПроцентовНарастающая + ?(ПризнакРасчетаПланФакт = "План",НовСтр.Сумма,НовСтр.СуммаФакт);
							СуммаНарастающая = СуммаНарастающая + СуммаЗаМесяц;	
							
							//Если ЭлДанных.НДС > 0 Тогда     
							//	СтрокаНДС = ТаблицаДанныхОтчета.Добавить();  
							//	СтрокаНДС.Проект = НовСтр.Проект;				 
							//	СтрокаНДС.Направление = НовСтр.Направление;
							//	СтрокаНДС.Контрагент = "Контрагент НДС"; 
							//	СтрокаНДС.ПериодОтчета = НовСтр.ПериодОтчета; 
							//	СтрокаНДС.Организация = НовСтр.Организация;
							//	СтрокаНДС.Сумма = -(НовСтр.Сумма * ЭлДанных.НДС) / (ЭлДанных.НДС+1);	
							//КонецЕсли;					
							
							
						КонецЦикла;
						
					КонецЕсли;  
					
				КонецЦикла;
				
			КонецЦикла; 
			
		КонецЕсли;  
		
	КонецЦикла;	
	
	Возврат ТаблицаДанныхОтчета;
			
КонецФункции // РассчитаемКосвенныеРасходыОтдельно()
// <Описание функции>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
Функция ПолучениеПроцентоДляРаспеределенияБЛКосвенные(ПризнакПолученияПроцентов)
	
	ТаблицаПроцентов_РаспределениеКосвенные = Новый ТаблицаЗначений;
	ТаблицаПроцентов_РаспределениеКосвенные.Колонки.Добавить("Проект",Новый ОписаниеТипов("СправочникСсылка.ПроизвольныйКлассификаторУХ"));  
	ТаблицаПроцентов_РаспределениеКосвенные.Колонки.Добавить("Организация",Новый ОписаниеТипов("СправочникСсылка.Организации"));   
	ТаблицаПроцентов_РаспределениеКосвенные.Колонки.Добавить("ПроцентБЛ",Новый ОписаниеТипов("Число"));  
	ТаблицаПроцентов_РаспределениеКосвенные.Колонки.Добавить("ПериодОтчета",Новый ОписаниеТипов("СправочникСсылка.Периоды"));

	
	СценарииОтчета = Справочники.Сценарии.НайтиПоНаименованию("Сценарий месячный (2025 год)");     
	тПериодыОтчета = ПолучениеПеридовОтчета();
	
	РТСТ = Справочники.Организации.НайтиПоНаименованию("РТС-ТЕНДЕР ООО");
	ЦРЭ = Справочники.Организации.НайтиПоНаименованию("АО ""ЦРЭ""");
	ОТС = Справочники.Организации.НайтиПоНаименованию("АО ""ОТС""");
	Академия = Справочники.Организации.НайтиПоНаименованию("РТС-АКАДЕМИЯ ООО");
	Холдинг = Справочники.Организации.НайтиПоНаименованию("АО ""РТС-холдинг""");
	Силует = Справочники.Организации.НайтиПоНаименованию("Силуэт");
	Текса = Справочники.Организации.НайтиПоНаименованию("ТЕКСА АО");     	
	
	СоответствиеКодовОтчетовКОрганизации_РаспределениеКосвенные = Новый Соответствие;  
	СоответствиеКодовОтчетовКОрганизации_РаспределениеКосвенные.Вставить("РаспределениеКосвенныхРТС",РТСТ); 
	СоответствиеКодовОтчетовКОрганизации_РаспределениеКосвенные.Вставить("РаспределениеКосвенныхЦРЭ",ЦРЭ);
	СоответствиеКодовОтчетовКОрганизации_РаспределениеКосвенные.Вставить("РаспределениеКосвенныхОТС",ОТС);
	СоответствиеКодовОтчетовКОрганизации_РаспределениеКосвенные.Вставить("РаспределениеКосвенныхРТСА",Академия);
	СоответствиеКодовОтчетовКОрганизации_РаспределениеКосвенные.Вставить("РаспределениеКосвенныхХолдинг",Холдинг);
	СоответствиеКодовОтчетовКОрганизации_РаспределениеКосвенные.Вставить("РаспределениеКосвенныхСилуэт",Силует);
	СоответствиеКодовОтчетовКОрганизации_РаспределениеКосвенные.Вставить("РаспределениеКосвенныхТекса",Текса);
	
	Для Каждого ЭлСоответствия Из СоответствиеКодовОтчетовКОрганизации_РаспределениеКосвенные Цикл  
		
		СтруктураПараметровОтбора   = Новый Структура("ВидОтчета,ПериодОтчета,Сценарий",  
		Справочники.ВидыОтчетов.НайтиПоКоду(ЭлСоответствия.Ключ),тПериодыОтчета,СценарииОтчета);	
		РаскрываемыеАналитики       = Новый Структура("Аналитика1");	
		тЗначенияПоказателейВидаОтчета = СводнаяТаблицаУХ.ПолучитьЗначениеПоказателей(
		СтруктураПараметровОтбора,РаскрываемыеАналитики);    	
		
		Если  тЗначенияПоказателейВидаОтчета.Количество() > 0 Тогда  
			Для Каждого СтрПоказателя Из  тЗначенияПоказателейВидаОтчета Цикл   
				Если СтрПоказателя.ПоказательОтчета.Наименование = ПризнакПолученияПроцентов Тогда
					НовСтр = ТаблицаПроцентов_РаспределениеКосвенные.Добавить();
					НовСтр.Проект = СтрПоказателя.Аналитика1;
					НовСтр.Организация = ЭлСоответствия.Значение;
					НовСтр.ПроцентБЛ = СтрПоказателя.Значение;   
					НовСтр.ПериодОтчета = СтрПоказателя.ПериодОтчета;  
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ТаблицаПроцентов_РаспределениеКосвенные;
	
КонецФункции // ПолучениеПроцентоДляРаспеределенияБЛКосвенные()
// <Описание функции>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
Функция СведемПланФакт(ТаблицаДанных_План,ДатаНачалаОтчета,ДатаОкончанияОтчета)
	ТаблицаДанных_Факт = ПолучениеДанныхФакта();      
	//{Воронков А.Д. 13.05.2025 ++
	//Задача:https://tfs.rts-tender.ru/tfs/DefaultCollection/RTS.1C/_workitems/edit/409001/?workitem=409668
	ТаблицаДанных_План.Свернуть("Направление,Проект,СтатьяЗатрат,СтатьяЗатратКод,СтатьяДоходовРасходов,НазначениеПлатежа,Контрагент,Регион,ПериодОтчета,Организация,ПериодЗаписи,ПериодОтчетаРодитель","Сумма");
	//--}
	ТаблицаДанныхОтчета = СопоставлениеДанныхПланФакт(ТаблицаДанных_План,ТаблицаДанных_Факт,ДатаНачалаОтчета,ДатаОкончанияОтчета);	
	Возврат ТаблицаДанныхОтчета;
КонецФункции // СведемПланФакт()
// <Описание функции>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
Функция ПолучениеДанныхФакта()
	
	МассивПравилОбработки = Новый Массив;
	МассивПравилОбработки.Добавить("ЗагрузкаФакта");     
	
	ПоказателиЧисловые = Новый Массив;
	ПоказателиЧисловые.Добавить("ДанныеФакт_Сумма");  
	
	ПоказателиНечисловые = Новый Массив;
	ПоказателиНечисловые.Добавить("ДанныеФакт_РасходыДоходы");
	
	ЗначенияИсключения = Новый Массив;
	ЗначенияИсключения.Добавить("Компенсация ЦРЭ"); 
	ЗначенияИсключения.Добавить("ВГО"); 
	
    Сценарий = Справочники.Сценарии.НайтиПоНаименованию("Сценарий месячный (2025 год)");
	
	Запрос = Новый Запрос;     
	Запрос.УстановитьПараметр("МассивПравилОбработки", МассивПравилОбработки);
	Запрос.УстановитьПараметр("ПоказателиЧисловые", ПоказателиЧисловые);  
	Запрос.УстановитьПараметр("ПоказателиНечисловые", ПоказателиНечисловые);  
	Запрос.УстановитьПараметр("ЗначенияИсключения", ЗначенияИсключения);
	Запрос.УстановитьПараметр("Сценарий", Сценарий); 
	
	//{Воронков А.Д. 13.05.2025 ++
	//Задача:https://tfs.rts-tender.ru/tfs/DefaultCollection/RTS.1C/_workitems/edit/409540
	Запрос.Текст = ПолучениеЗапросаВыборкаДанныхФакта();
	//--}
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	
	Возврат РезультатЗапроса;	

КонецФункции  
// <Описание функции>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
Функция СопоставлениеДанныхПланФакт(ТаблицаДанных_План,ТаблицаДанных_Факт,ДатаНачалаОтчета,ДатаОкончанияОтчета)
	
	ПризнакПолученияПроцентов = "Данные процентов процент факт";//Факт
	ПризнакРасчетаПланФакт = "СуммаФакт"; //Сумма фактического значения 	    
	СоответствиеПроектовБЛ = СоответствиеПроектовБЛ();	
	ВладелецСправочника = ПланыВидовХарактеристик.ВидыСубконтоКорпоративные.НайтиПоНаименованию("Проект");
	
	СтруктураТаблиц = ОтбремКосвенныеРасходыФактаОтдельно(ТаблицаДанных_Факт,ПризнакПолученияПроцентов);
	
	Запрос = Новый Запрос;  
	Запрос.УстановитьПараметр("ВТ_ТаблицаПлан",ТаблицаДанных_План);  
	Запрос.УстановитьПараметр("ВТ_ТаблицаФакт",СтруктураТаблиц.ТаблицаДанных_Факт); 
	Запрос.УстановитьПараметр("НачПер",ДатаНачалаОтчета); 
	Запрос.УстановитьПараметр("КонПер",ДатаОкончанияОтчета);
	Запрос.Текст = ПолучениеЗапросаОбъединенияПланФакт();	
	Попытка
		РезультатЗапроса = Запрос.Выполнить().Выгрузить();	
	Исключение     
		Сообщение = ОписаниеОшибки();
	КонецПопытки;   
	
	ОбработаемНесопоставленныйФактОтдельно(РезультатЗапроса,СтруктураТаблиц.ТаблицаДанных_Факт);       
					
	ОбработаемКосвенныеРасходыОтдельно(РезультатЗапроса,СтруктураТаблиц.ТаблицаДанных_Косвенные,ПризнакРасчетаПланФакт,ПризнакПолученияПроцентов);
	
	ST_НСИ_Проект = Справочники.ПроизвольныйКлассификаторУХ.НайтиПоКоду("000000019",,,ВладелецСправочника); //ST+НСИ
	
	Для Каждого Стр Из РезультатЗапроса Цикл  
		//{Воронков А.Д. 13.05.2025 ++   
		//Задача:https://tfs.rts-tender.ru/tfs/DefaultCollection/RTS.1C/_workitems/edit/409002/
		Если Стр.Проект.Код = "000000045" Тогда //Товарные рынки   
			ПроектБЛ = Справочники.ПроизвольныйКлассификаторУХ.НайтиПоНаименованию("Косвенные",,,ВладелецСправочника);	
		//--}
		Иначе
			ПроектБЛ = СоответствиеПроектовБЛ.Получить(Стр.Проект.Наименование); 
		КонецЕсли;   
		
		//{Воронков А.Д. 12.05.2025 ++
		//Задача:https://tfs.rts-tender.ru/tfs/DefaultCollection/RTS.1C/_workitems/edit/409415/ 
		Если Стр.СтатьяЗатрат.Код =  "00-000015" Тогда      
			Стр.Направление = "Агентские";			
		ИначеЕсли Стр.СтатьяЗатрат.Код =  "00-000023" Тогда  
			Стр.Направление = "Прочие доходы/расходы";	
		КонецЕсли;   
		//--}    
		
		//{Воронков А.Д. 12.05.2025 ++
		//Задача:https://tfs.rts-tender.ru/tfs/DefaultCollection/RTS.1C/_workitems/edit/409003/
		Если Стр.Проект.Код = "000000011" ИЛИ Стр.Проект.Код = "000000044" Тогда //Sales Tech ИЛИ НСИ       
			Стр.Проект = ST_НСИ_Проект;	
		КонецЕсли;
		//--}
		
		Стр.Проект = ?(ПроектБЛ<>Неопределено,ПроектБЛ,Стр.Проект); 
		
		Если Стр.Сумма <> NULL И Стр.СуммаФакт <> NULL  Тогда    
			Стр.СуммаОтклонение = Стр.СуммаФакт - Стр.Сумма;  
			Если Стр.Сумма = 0 Тогда  
				Стр.ОтклонениеПроцент = 100;	
			Иначе
				Стр.ОтклонениеПроцент = (Стр.СуммаОтклонение / Стр.Сумма) * 100 ;    
			КонецЕсли;
		ИначеЕсли Стр.Сумма <> NULL И Стр.СуммаФакт = NULL  Тогда 
			Если Стр.Сумма = 0 Тогда   
				Продолжить;	
			Иначе
				Стр.СуммаОтклонение = -Стр.Сумма; 
				Стр.ОтклонениеПроцент = 100;//(Стр.СуммаОтклонение / Стр.Сумма) * 100 ; 
			КонецЕсли;
		ИначеЕсли Стр.Сумма = NULL И Стр.СуммаФакт <> NULL  Тогда   
			Стр.СуммаОтклонение = -Стр.СуммаФакт;
			Стр.ОтклонениеПроцент = 100 ;
		КонецЕсли;		
	КонецЦикла;
	
	Возврат РезультатЗапроса;
КонецФункции // СопоставлениеДанныхПланФакт()
// <Описание функции>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
Функция ПолучениеЗапросаОбъединенияПланФакт()
	
	Возврат "ВЫБРАТЬ
	        |	ВТ_ТаблицаПлан.Проект КАК Проект,
	        |	ВТ_ТаблицаПлан.СтатьяЗатрат КАК СтатьяЗатрат,
	        |	ВТ_ТаблицаПлан.СтатьяДоходовРасходов КАК СтатьяДоходовРасходов,
	        |	ВТ_ТаблицаПлан.НазначениеПлатежа КАК НазначениеПлатежа,
	        |	ВЫРАЗИТЬ(ВТ_ТаблицаПлан.Контрагент КАК СТРОКА(150)) КАК Контрагент,
	        |	ВТ_ТаблицаПлан.Регион КАК Регион,
	        |	ВТ_ТаблицаПлан.Сумма КАК Сумма,
	        |	ВТ_ТаблицаПлан.ПериодОтчета КАК ПериодОтчета,
	        |	ВТ_ТаблицаПлан.ПериодОтчетаРодитель КАК ПериодОтчетаРодитель,
	        |	ВТ_ТаблицаПлан.Направление КАК Направление,
	        |	ВТ_ТаблицаПлан.Организация КАК Организация,
	        |	ВТ_ТаблицаПлан.ПериодЗаписи КАК ПериодЗаписи
	        |ПОМЕСТИТЬ ВТ_ТаблицаПлан
	        |ИЗ
	        |	&ВТ_ТаблицаПлан КАК ВТ_ТаблицаПлан
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ
	        |	ВТ_ТаблицаФакт.Проект КАК Проект,
	        |	ВТ_ТаблицаФакт.СтатьяЗатрат КАК СтатьяЗатрат,
	        |	ВТ_ТаблицаФакт.СтатьяДоходовРасходов КАК СтатьяДоходовРасходов,
	        |	ВТ_ТаблицаФакт.НазначениеПлатежа КАК НазначениеПлатежа,
	        |	ВЫРАЗИТЬ(ВТ_ТаблицаФакт.Контрагент КАК СТРОКА(150)) КАК Контрагент,
	        |	ВТ_ТаблицаФакт.Регион КАК Регион,
	        |	ВТ_ТаблицаФакт.СуммаФакт КАК СуммаФакт,
	        |	ВТ_ТаблицаФакт.ПериодОтчета КАК ПериодОтчета,
	        |	ВТ_ТаблицаФакт.ПериодОтчетаРодитель КАК ПериодОтчетаРодитель,
	        |	ВТ_ТаблицаФакт.Организация КАК Организация,
	        |	ВТ_ТаблицаФакт.ПериодЗаписи КАК ПериодЗаписи
	        |ПОМЕСТИТЬ ВТ_ТаблицаФакт
	        |ИЗ
	        |	&ВТ_ТаблицаФакт КАК ВТ_ТаблицаФакт
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ
	        |	ВТ_ТаблицаПлан.Проект КАК Проект,
	        |	ВТ_ТаблицаПлан.СтатьяЗатрат КАК СтатьяЗатрат,
	        |	ВТ_ТаблицаПлан.СтатьяДоходовРасходов КАК СтатьяДоходовРасходов,
	        |	ВТ_ТаблицаПлан.НазначениеПлатежа КАК НазначениеПлатежа,
	        |	ВТ_ТаблицаПлан.Контрагент КАК Контрагент,
	        |	ВТ_ТаблицаПлан.Регион КАК Регион,
	        |	ВТ_ТаблицаПлан.Сумма КАК Сумма,
	        |	ВТ_ТаблицаПлан.ПериодОтчета КАК ПериодОтчета,
	        |	ВТ_ТаблицаПлан.Направление КАК Направление,
	        |	ВТ_ТаблицаПлан.Организация КАК Организация,
	        |	ВТ_ТаблицаФакт.СуммаФакт КАК СуммаФакт,
	        |	ВТ_ТаблицаПлан.Сумма - ВТ_ТаблицаФакт.СуммаФакт КАК СуммаОтклонение,
	        |	ВТ_ТаблицаФакт.СуммаФакт КАК ОтклонениеПроцент,
	        |	ВТ_ТаблицаПлан.ПериодОтчетаРодитель КАК ПериодОтчетаРодитель
	        |ИЗ
	        |	ВТ_ТаблицаПлан КАК ВТ_ТаблицаПлан
	        |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТаблицаФакт КАК ВТ_ТаблицаФакт
	        |		ПО ВТ_ТаблицаПлан.Проект = ВТ_ТаблицаФакт.Проект
	        |			И ВТ_ТаблицаПлан.СтатьяЗатрат = ВТ_ТаблицаФакт.СтатьяЗатрат
	        |			И ВТ_ТаблицаПлан.СтатьяДоходовРасходов = ВТ_ТаблицаФакт.СтатьяДоходовРасходов
	        |			И ВТ_ТаблицаПлан.НазначениеПлатежа = ВТ_ТаблицаФакт.НазначениеПлатежа
	        |			И ВТ_ТаблицаПлан.Контрагент = ВТ_ТаблицаФакт.Контрагент
	        |			И ВТ_ТаблицаПлан.Регион = ВТ_ТаблицаФакт.Регион
	        |			И ВТ_ТаблицаПлан.ПериодОтчета = ВТ_ТаблицаФакт.ПериодОтчета
	        |			И ВТ_ТаблицаПлан.Организация = ВТ_ТаблицаФакт.Организация
	        |			И ВТ_ТаблицаПлан.ПериодОтчетаРодитель = ВТ_ТаблицаФакт.ПериодОтчетаРодитель
	        |ГДЕ
	        |	ВЫБОР
	        |			КОГДА ВТ_ТаблицаПлан.ПериодЗаписи = ДАТАВРЕМЯ(1, 1, 1)
	        |				ТОГДА ИСТИНА
	        |			ИНАЧЕ ВТ_ТаблицаПлан.ПериодЗаписи МЕЖДУ &НачПер И &КонПер
	        |		КОНЕЦ
	        |
	        |УПОРЯДОЧИТЬ ПО
	        |	ПериодОтчета";
	

КонецФункции // ПолучениеЗапросаОбъединенияПланФакт()   
// <Описание Процедуры>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
Процедура ОбработаемНесопоставленныйФактОтдельно(РезультатЗапроса,ТаблицаДанных_Факт)
		
	Запрос = Новый Запрос;    
	Запрос.УстановитьПараметр("ВТ_Факт",РезультатЗапроса);
	Запрос.Текст = ПолучениеЗапросаАналитикиСопоставленногоФакта();
			
	ТаблФакт = Запрос.Выполнить().Выгрузить();
		
	Табл2 = ТаблицаДанных_Факт.Скопировать();
	
	Запрос2 = Новый Запрос; 
	Запрос2.УстановитьПараметр("ВТ_ДанныеФактСопоставленный",ТаблФакт); //Сворачиваем строки по аналитикам, чтобы исключить строки, которые сметчились с план/фактом
	Запрос2.УстановитьПараметр("ВТ_ДанныеФакт",Табл2); //Таблица Факта, по которой будем искать уже смечтченные строки, и исключать их из повторной обработки
	Запрос2.Текст = ПолучениеЗапросаОбработаемНесопоставленныйФакт();   
	
	РезультатЗапроса_НесопоставленныйФакт = Запрос2.Выполнить().Выгрузить();  		
	
	Для Каждого СтрокаФакт Из РезультатЗапроса_НесопоставленныйФакт Цикл  
		Если СтрокаФакт.СтатьяЗатрат.Код = "00-000018" Тогда //Мотивация  
			СтрокаФакт.Направление = "Мотивация";	
		Иначе 
			СтрокаФакт.Направление = "OPEX";	
		КонецЕсли;
	КонецЦикла;
	
	ДополнитьТаблицу(РезультатЗапроса_НесопоставленныйФакт,РезультатЗапроса); 
	
КонецПроцедуры // ОбработаемНесопоставленныйФактОтдельно()  
// <Описание функции>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
Функция ПолучениеЗапросаОбработаемНесопоставленныйФакт()
	
	Возврат "ВЫБРАТЬ
	        |	ВТ_ДанныеФактСопоставленный.Проект КАК Проект,
	        |	ВТ_ДанныеФактСопоставленный.СтатьяЗатрат КАК СтатьяЗатрат,
	        |	ВТ_ДанныеФактСопоставленный.СтатьяДоходовРасходов КАК СтатьяДоходовРасходов,
	        |	ВТ_ДанныеФактСопоставленный.НазначениеПлатежа КАК НазначениеПлатежа,
			|	ВТ_ДанныеФактСопоставленный.Контрагент КАК Контрагент,
			|	ВТ_ДанныеФактСопоставленный.Регион КАК Регион,
			|	ВТ_ДанныеФактСопоставленный.СуммаФакт КАК СуммаФакт,
			|	ВТ_ДанныеФактСопоставленный.ПериодОтчета КАК ПериодОтчета,  
			|	ВТ_ДанныеФактСопоставленный.ПериодОтчетаРодитель КАК ПериодОтчетаРодитель, 
			|	ВТ_ДанныеФактСопоставленный.Организация КАК Организация,
	        |	0 КАК Сумма,
	        |	0 КАК СуммаОтклонение,
	        |	0 КАК ОтклонениеПроцент
	        |ПОМЕСТИТЬ ВТ_ДанныеФактСопоставленный
	        |ИЗ
	        |	&ВТ_ДанныеФактСопоставленный КАК ВТ_ДанныеФактСопоставленный
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ
	        |	ВТ_ДанныеФакт.Проект КАК Проект,
	        |	ВТ_ДанныеФакт.СтатьяЗатрат КАК СтатьяЗатрат,
	        |	ВТ_ДанныеФакт.СтатьяДоходовРасходов КАК СтатьяДоходовРасходов,
	        |	ВТ_ДанныеФакт.НазначениеПлатежа КАК НазначениеПлатежа,
	        |	ВТ_ДанныеФакт.Контрагент КАК Контрагент,
	        |	ВТ_ДанныеФакт.Регион КАК Регион,
	        |	ВТ_ДанныеФакт.СуммаФакт КАК СуммаФакт,
	        |	ВТ_ДанныеФакт.ПериодОтчета КАК ПериодОтчета,  
			|	ВТ_ДанныеФакт.ПериодОтчетаРодитель КАК ПериодОтчетаРодитель, 
			|	ВТ_ДанныеФакт.Организация КАК Организация,
	        |	0 КАК Сумма,
	        |	0 КАК СуммаОтклонение,
	        |	0 КАК ОтклонениеПроцент
	        |ПОМЕСТИТЬ ВТ_ДанныеФакт
	        |ИЗ
	        |	&ВТ_ДанныеФакт КАК ВТ_ДанныеФакт
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ
	        |	ВТ_ДанныеФакт.Проект КАК Проект,
	        |	ВТ_ДанныеФакт.СтатьяЗатрат КАК СтатьяЗатрат,
	        |	ВТ_ДанныеФакт.СтатьяДоходовРасходов КАК СтатьяДоходовРасходов,
	        |	ВТ_ДанныеФакт.НазначениеПлатежа КАК НазначениеПлатежа,
	        |	ВТ_ДанныеФакт.Контрагент КАК Контрагент,
	        |	ВТ_ДанныеФакт.Регион КАК Регион,
	        |	ВТ_ДанныеФакт.СуммаФакт КАК СуммаФакт,
	        |	ВТ_ДанныеФакт.ПериодОтчета КАК ПериодОтчета,
			|	ВТ_ДанныеФакт.ПериодОтчетаРодитель КАК ПериодОтчетаРодитель,
	        |	ВЫБОР
	        |		КОГДА НЕ ВТ_ДанныеФактСопоставленный.Проект ЕСТЬ NULL
	        |				И НЕ ВТ_ДанныеФактСопоставленный.СтатьяЗатрат ЕСТЬ NULL
	        |				И НЕ ВТ_ДанныеФактСопоставленный.СтатьяДоходовРасходов ЕСТЬ NULL
	        |				И НЕ ВТ_ДанныеФактСопоставленный.НазначениеПлатежа ЕСТЬ NULL
	        |				И НЕ ВТ_ДанныеФактСопоставленный.Контрагент ЕСТЬ NULL
	        |				И НЕ ВТ_ДанныеФактСопоставленный.Регион ЕСТЬ NULL
	        |				И НЕ ВТ_ДанныеФактСопоставленный.ПериодОтчета ЕСТЬ NULL  
			|				И НЕ ВТ_ДанныеФактСопоставленный.ПериодОтчетаРодитель ЕСТЬ NULL  
	        |			ТОГДА ИСТИНА
	        |		ИНАЧЕ ЛОЖЬ
	        |	КОНЕЦ КАК НеОбрабатываем,
	        |	ВТ_ДанныеФакт.Сумма - ВТ_ДанныеФакт.СуммаФакт КАК СуммаОтклонение,
	        |	ВТ_ДанныеФакт.Сумма КАК Сумма,
	        |	ВТ_ДанныеФакт.ОтклонениеПроцент КАК ОтклонениеПроцент,
			|	ВТ_ДанныеФакт.Организация КАК Организация
	        |ПОМЕСТИТЬ ВТ_ВыборкаДанных
	        |ИЗ
	        |	ВТ_ДанныеФакт КАК ВТ_ДанныеФакт
	        |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДанныеФактСопоставленный КАК ВТ_ДанныеФактСопоставленный
	        |		ПО ВТ_ДанныеФакт.Проект = ВТ_ДанныеФактСопоставленный.Проект
	        |			И ВТ_ДанныеФакт.СтатьяЗатрат = ВТ_ДанныеФактСопоставленный.СтатьяЗатрат
	        |			И ВТ_ДанныеФакт.СтатьяДоходовРасходов = ВТ_ДанныеФактСопоставленный.СтатьяДоходовРасходов
	        |			И ВТ_ДанныеФакт.НазначениеПлатежа = ВТ_ДанныеФактСопоставленный.НазначениеПлатежа
	        |			И ВТ_ДанныеФакт.Контрагент = ВТ_ДанныеФактСопоставленный.Контрагент
	        |			И ВТ_ДанныеФакт.Регион = ВТ_ДанныеФактСопоставленный.Регион
	        |			И ВТ_ДанныеФакт.ПериодОтчета = ВТ_ДанныеФактСопоставленный.ПериодОтчета 
			|			И ВТ_ДанныеФакт.ПериодОтчетаРодитель = ВТ_ДанныеФактСопоставленный.ПериодОтчетаРодитель
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ
	        |	ВТ_ВыборкаДанных.Проект КАК Проект,
			|	ВТ_ВыборкаДанных.СтатьяЗатрат КАК СтатьяЗатрат,
			|	ВТ_ВыборкаДанных.СтатьяДоходовРасходов КАК СтатьяДоходовРасходов,
			|	ВТ_ВыборкаДанных.НазначениеПлатежа КАК НазначениеПлатежа,
			|	ВТ_ВыборкаДанных.Контрагент КАК Контрагент,
			|	ВТ_ВыборкаДанных.Регион КАК Регион,
			|	ВТ_ВыборкаДанных.СуммаФакт КАК СуммаФакт,
			|	ВТ_ВыборкаДанных.ПериодОтчета КАК ПериодОтчета,  
			|	ВТ_ВыборкаДанных.ПериодОтчетаРодитель КАК ПериодОтчетаРодитель,
			|	ВТ_ВыборкаДанных.Организация КАК Организация,		
			|	ВТ_ВыборкаДанных.НеОбрабатываем КАК НеОбрабатываем,
			|	ВЫРАЗИТЬ("""" КАК СТРОКА(15)) КАК Направление,
			|	ВТ_ВыборкаДанных.СуммаОтклонение КАК СуммаОтклонение,
			|	ВТ_ВыборкаДанных.Сумма КАК Сумма,
	        |	ВТ_ВыборкаДанных.ОтклонениеПроцент КАК ОтклонениеПроцент
	        |ИЗ
	        |	ВТ_ВыборкаДанных КАК ВТ_ВыборкаДанных
	        |ГДЕ
	        |	НЕ ВТ_ВыборкаДанных.НеОбрабатываем";
	
			

КонецФункции // ПолучениеЗапросаОбработаемНесопоставленныйФакт()   
// <Описание функции>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
Функция ПолучениеЗапросаАналитикиСопоставленногоФакта()

	Возврат "ВЫБРАТЬ
		|	ВТ_Факт.Проект КАК Проект,
		|	ВТ_Факт.СтатьяЗатрат КАК СтатьяЗатрат,
		|	ВТ_Факт.СтатьяДоходовРасходов КАК СтатьяДоходовРасходов,
		|	ВТ_Факт.НазначениеПлатежа КАК НазначениеПлатежа,
		|	ВТ_Факт.Контрагент КАК Контрагент,
		|	ВТ_Факт.Регион КАК Регион,
		|	ВТ_Факт.СуммаФакт КАК СуммаФакт,
		|	ВТ_Факт.ПериодОтчета КАК ПериодОтчета,
		|	ВТ_Факт.ПериодОтчетаРодитель КАК ПериодОтчетаРодитель,
		|	ВТ_Факт.Организация КАК Организация
		|ПОМЕСТИТЬ ВТ_Факт
		|ИЗ
		|	&ВТ_Факт КАК ВТ_Факт
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Факт.Проект КАК Проект,
		|	ВТ_Факт.СтатьяЗатрат КАК СтатьяЗатрат,
		|	ВТ_Факт.СтатьяДоходовРасходов КАК СтатьяДоходовРасходов,
		|	ВТ_Факт.НазначениеПлатежа КАК НазначениеПлатежа,
		|	ВТ_Факт.Контрагент КАК Контрагент,
		|	ВТ_Факт.Регион КАК Регион,
		|	СУММА(ВТ_Факт.СуммаФакт) КАК СуммаФакт,
		|	ВТ_Факт.ПериодОтчета КАК ПериодОтчета,
		|	ВТ_Факт.ПериодОтчетаРодитель КАК ПериодОтчетаРодитель,
		|	ВТ_Факт.Организация КАК Организация
		|ИЗ
		|	ВТ_Факт КАК ВТ_Факт
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_Факт.Проект,
		|	ВТ_Факт.СтатьяЗатрат,
		|	ВТ_Факт.СтатьяДоходовРасходов,
		|	ВТ_Факт.Регион,
		|	ВТ_Факт.ПериодОтчета,
		|	ВТ_Факт.Контрагент,
		|	ВТ_Факт.НазначениеПлатежа,
		|	ВТ_Факт.ПериодОтчетаРодитель,
		|	ВТ_Факт.Организация
		|
		|ИМЕЮЩИЕ
		|	СУММА(ВТ_Факт.СуммаФакт) <> 0";
	
КонецФункции // ПолучениеЗапросаСопоставленногоПланФакта()     
// <Описание функции>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
Функция ПолучениеЗапросаВыборкаДанныхФакта()     
	Возврат "ВЫБРАТЬ
		|	ЗначенияПоказателейОтчетов6.Показатель КАК Показатель,
		|	ЗначенияПоказателейОтчетов6.Аналитика1 КАК Проект,
		|	ЗначенияПоказателейОтчетов6.Аналитика2 КАК СтатьяЗатрат,
		|	ЗначенияПоказателейОтчетов6.Аналитика3 КАК СтатьяДоходовРасходов,
		|	ЗначенияПоказателейОтчетов6.Аналитика4 КАК НазначениеПлатежа,
		|	ЗначенияПоказателейОтчетов6.Аналитика5.Наименование КАК Контрагент,
		|	ЗначенияПоказателейОтчетов6.Аналитика6 КАК Регион,
		|	СУММА(ЗначенияПоказателейОтчетов6.Значение) КАК СуммаФакт,
		|	ЗначенияПоказателейОтчетов6.Версия.ПериодОтчета КАК ПериодОтчета,
		|	ЗначенияПоказателейОтчетов6.Версия.ПериодОтчета.Родитель КАК ПериодОтчетаРодитель,
		|	ЗначенияПоказателейОтчетов6.Версия.Организация КАК Организация,
		|	ЗначенияПоказателейОтчетов6.Версия.ПериодОтчета.ДатаНачала КАК ПериодЗаписи
		|ПОМЕСТИТЬ ВТ_ЧисловыеПоказатели
		|ИЗ
		|	РегистрСведений.ЗначенияПоказателейОтчетов6 КАК ЗначенияПоказателейОтчетов6
		|ГДЕ
		|	ЗначенияПоказателейОтчетов6.Показатель.Код В(&ПоказателиЧисловые)
		|	И ЗначенияПоказателейОтчетов6.ПравилоОбработки.Владелец.Родитель.Код В(&МассивПравилОбработки)
		|	И ЗначенияПоказателейОтчетов6.Версия.Сценарий = &Сценарий
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗначенияПоказателейОтчетов6.Аналитика6,
		|	ЗначенияПоказателейОтчетов6.Аналитика5.Наименование,
		|	ЗначенияПоказателейОтчетов6.Версия.ПериодОтчета,
		|	ЗначенияПоказателейОтчетов6.Версия.Организация,
		|	ЗначенияПоказателейОтчетов6.Аналитика1,
		|	ЗначенияПоказателейОтчетов6.Аналитика2,
		|	ЗначенияПоказателейОтчетов6.Аналитика3,
		|	ЗначенияПоказателейОтчетов6.Показатель,
		|	ЗначенияПоказателейОтчетов6.Аналитика4,
		|	ЗначенияПоказателейОтчетов6.Версия.ПериодОтчета.Родитель,
		|	ЗначенияПоказателейОтчетов6.Версия.ПериодОтчета.ДатаНачала
		|
		|ИМЕЮЩИЕ
		|	СУММА(ЗначенияПоказателейОтчетов6.Значение) <> 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗначенияПоказателейОтчетовНечисловые.Показатель КАК Показатель,
		|	ЗначенияПоказателейОтчетовНечисловые.Аналитика1 КАК Проект,
		|	ЗначенияПоказателейОтчетовНечисловые.Аналитика2 КАК СтатьяЗатрат,
		|	ЗначенияПоказателейОтчетовНечисловые.Аналитика3 КАК СтатьяДоходовРасходов,
		|	ЗначенияПоказателейОтчетовНечисловые.Аналитика4 КАК НазначениеПлатежа,
		|	ЗначенияПоказателейОтчетовНечисловые.Аналитика5.Наименование КАК Контрагент,
		|	ЗначенияПоказателейОтчетовНечисловые.Аналитика6 КАК Регион,
		|	ЗначенияПоказателейОтчетовНечисловые.Значение КАК Значение,
		|	ЗначенияПоказателейОтчетовНечисловые.Версия.ПериодОтчета КАК ПериодОтчета,
		|	ЗначенияПоказателейОтчетовНечисловые.Версия.Организация КАК Организация
		|ПОМЕСТИТЬ ВТ_НечисловыеПоказатели
		|ИЗ
		|	РегистрСведений.ЗначенияПоказателейОтчетовНечисловые КАК ЗначенияПоказателейОтчетовНечисловые
		|ГДЕ
		|	ЗначенияПоказателейОтчетовНечисловые.Показатель.Код В(&ПоказателиНечисловые)
		|	И ЗначенияПоказателейОтчетовНечисловые.ПравилоОбработки.Владелец.Родитель.Код В(&МассивПравилОбработки)
		|	И ЗначенияПоказателейОтчетовНечисловые.Версия.Сценарий = &Сценарий
		|	И ЗначенияПоказателейОтчетовНечисловые.Версия.ОсновнаяВерсия
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗначенияПоказателейОтчетовНечисловые.Показатель,
		|	ЗначенияПоказателейОтчетовНечисловые.Аналитика1,
		|	ЗначенияПоказателейОтчетовНечисловые.Аналитика2,
		|	ЗначенияПоказателейОтчетовНечисловые.Аналитика3,
		|	ЗначенияПоказателейОтчетовНечисловые.Аналитика4,
		|	ЗначенияПоказателейОтчетовНечисловые.Аналитика5,
		|	ЗначенияПоказателейОтчетовНечисловые.Аналитика6,
		|	ЗначенияПоказателейОтчетовНечисловые.Значение,
		|	ЗначенияПоказателейОтчетовНечисловые.Версия.ПериодОтчета,
		|	ЗначенияПоказателейОтчетовНечисловые.Версия.Организация,
		|	ЗначенияПоказателейОтчетовНечисловые.Аналитика5.Наименование
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ЧисловыеПоказатели.Показатель КАК Показатель,
		|	ВТ_ЧисловыеПоказатели.Проект КАК Проект,
		|	ВТ_ЧисловыеПоказатели.СтатьяЗатрат КАК СтатьяЗатрат,
		|	ВТ_ЧисловыеПоказатели.СтатьяДоходовРасходов КАК СтатьяДоходовРасходов,
		|	ВТ_ЧисловыеПоказатели.НазначениеПлатежа КАК НазначениеПлатежа,
		|	ВТ_ЧисловыеПоказатели.Контрагент КАК Контрагент,
		|	ВТ_ЧисловыеПоказатели.Регион КАК Регион,
		|	ВТ_ЧисловыеПоказатели.СуммаФакт КАК СуммаФакт,
		|	ВТ_ЧисловыеПоказатели.ПериодОтчета КАК ПериодОтчета,
		|	ВТ_ЧисловыеПоказатели.ПериодОтчетаРодитель КАК ПериодОтчетаРодитель,
		|	ВТ_ЧисловыеПоказатели.Организация КАК Организация,
		|	ВТ_ЧисловыеПоказатели.ПериодЗаписи КАК ПериодЗаписи
		|ИЗ
		|	ВТ_ЧисловыеПоказатели КАК ВТ_ЧисловыеПоказатели
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_НечисловыеПоказатели КАК ВТ_НечисловыеПоказатели
		|		ПО ВТ_ЧисловыеПоказатели.Проект = ВТ_НечисловыеПоказатели.Проект
		|			И ВТ_ЧисловыеПоказатели.СтатьяЗатрат = ВТ_НечисловыеПоказатели.СтатьяЗатрат
		|			И ВТ_ЧисловыеПоказатели.СтатьяДоходовРасходов = ВТ_НечисловыеПоказатели.СтатьяДоходовРасходов
		|			И ВТ_ЧисловыеПоказатели.НазначениеПлатежа = ВТ_НечисловыеПоказатели.НазначениеПлатежа
		|			И ВТ_ЧисловыеПоказатели.Контрагент = ВТ_НечисловыеПоказатели.Контрагент
		|			И ВТ_ЧисловыеПоказатели.Регион = ВТ_НечисловыеПоказатели.Регион
		|			И ВТ_ЧисловыеПоказатели.Организация = ВТ_НечисловыеПоказатели.Организация
		|			И ВТ_ЧисловыеПоказатели.ПериодОтчета = ВТ_НечисловыеПоказатели.ПериодОтчета
		|ГДЕ
		|	(ВТ_НечисловыеПоказатели.Значение ЕСТЬ NULL
		|			ИЛИ НЕ ВТ_НечисловыеПоказатели.Значение В (&ЗначенияИсключения))
		|";
КонецФункции
// <Описание процедуры>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
Процедура ДополнитьТаблицу(ТаблицаИсточник, ТаблицаПриемник)
	Для Каждого СтрокаТаблицыИсточник Из ТаблицаИсточник Цикл	
		ЗаполнитьЗначенияСвойств(ТаблицаПриемник.Добавить(), СтрокаТаблицыИсточник);	
	КонецЦикла;
КонецПроцедуры // ДополнитьТаблицу() 
// <Описание функции>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
Функция ПолучениеТаблицыРаскрываемыхАналитикВидаОтчета()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ГруппыРаскрытия.Владелец КАК Владелец,
		|	ГруппыРаскрытия.ВидАналитики1 КАК ВидАналитики1,
		|	ГруппыРаскрытия.ВидАналитики2 КАК ВидАналитики2,
		|	ГруппыРаскрытия.ВидАналитики3 КАК ВидАналитики3,
		|	ГруппыРаскрытия.ВидАналитики4 КАК ВидАналитики4,
		|	ГруппыРаскрытия.ВидАналитики5 КАК ВидАналитики5,
		|	ГруппыРаскрытия.ВидАналитики6 КАК ВидАналитики6,
		|	ГруппыРаскрытия.ПорядковыйНомер КАК ПорядковыйНомер,
		|	ГруппыРаскрытия.ЧислоАналитик КАК ЧислоАналитик,
		|	ГруппыРаскрытия.ВидАналитики1.Наименование КАК ВидАналитики1Наименование,
		|	ГруппыРаскрытия.Наименование КАК Наименование
		|ИЗ
		|	Справочник.ГруппыРаскрытия КАК ГруппыРаскрытия";
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	
	Возврат РезультатЗапроса;		

КонецФункции // ПолучениеРаскрываемыхАналитикВидаОтчета()  
// <Описание функции>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
Функция ПолучениеСпискаРаскрываемыхАналитикВидаОтчета(ТаблицаРаскрываемыхАналитик,ВидОтчета)
	
	ВидОтчета = Справочники.ВидыОтчетов.ПустаяСсылка();
	МассивСтрокАналитик = Новый Массив;
	НайденнаяСтрока = ТаблицаРаскрываемыхАналитик.Найти(ВидОтчета,"Владелец");    	
	СтрокаРаскрытияАналитик = Неопределено;   
	Если НайденнаяСтрока <> Неопределено Тогда		
		Для Сч=1 По НайденнаяСтрока.ЧислоАналитик Цикл  
			МассивСтрокАналитик.Добавить("Аналитика"+Сч);				
		КонецЦикла;  
	КонецЕсли;   
	
	СтрокаРаскрытияАналитик = СтрСоединить(МассивСтрокАналитик,",");
	
	Возврат СтрокаРаскрытияАналитик;

КонецФункции // ПолучениеСпискаРаскрываемыхАналитикВидаОтчета()   
// <Описание функции>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
Функция ОтбремКосвенныеРасходыФактаОтдельно(ТаблицаДанных_Факт,ПризнакПолученияПроцентов)

	//Отберем косвенные для отельной обработки ++   
	//Добавим их в отдельную таблицу для обработки, и удалим из метчинга план факт   
	
	ТаблицаДанных_Косвенные = ПолучениеТаблицыЗаполненияКосвенные("");
	
	СтрокиДляУдаления = Новый Массив;
		
 	Для Каждого Стр Из ТаблицаДанных_Факт Цикл      
		Если Стр.Проект.Код = "000000006" Тогда  //Косвенные    
			СтрКосвенные = ТаблицаДанных_Косвенные.Добавить();   
			Если Стр.СтатьяЗатрат.Код = "00-000018" Тогда //Мотивация 
				СтрКосвенные.Направление = "Мотивация";   
			Иначе    
				СтрКосвенные.Направление = "OPEX";
			КонецЕсли;
			СтрКосвенные.Организация = Стр.Организация;
			СтрКосвенные.ПериодОтчета = Стр.ПериодОтчета; 
			СтрКосвенные.ПериодЗаписи = Стр.ПериодЗаписи;
			СтрКосвенные.ПериодОтчетаРодитель = Стр.ПериодОтчетаРодитель;
			СтрКосвенные.Проект = Стр.Проект;
			СтрКосвенные.СтатьяЗатрат = Стр.СтатьяЗатрат;
			СтрКосвенные.СтатьяЗатратКод = СтрКосвенные.СтатьяЗатрат.Код;
			СтрКосвенные.СуммаФакт = Стр.СуммаФакт;	
			//ЗаполнитьЗначенияСвойств(ТаблицаДанных_Косвенные.Добавить(),Стр);
			СтрокиДляУдаления.Добавить(Стр);
		КонецЕсли;
	КонецЦикла; 
	
	Для Каждого Стр Из СтрокиДляУдаления Цикл  
		ТаблицаДанных_Факт.Удалить(Стр);	
	КонецЦикла;      
	
	СтруктураВозврата = Новый Структура("ТаблицаДанных_Факт,ТаблицаДанных_Косвенные",ТаблицаДанных_Факт,ТаблицаДанных_Косвенные);
	Возврат СтруктураВозврата;

КонецФункции // ОтбремКосвенныеРасходыФактаОтдельно()
// <Описание функции>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
Процедура ОбработаемКосвенныеРасходыОтдельно(РезультатЗапроса,ТаблицаДанных_Косвенные,ПризнакРасчетаПланФакт,ПризнакПолученияПроцентов)

	ТаблицаПроцентов_РаспределениеКосвенные = ПолучениеПроцентоДляРаспеределенияБЛКосвенные(ПризнакПолученияПроцентов);
	СоответствияПорядкаСортировкиСтатьиЗатрат = ПолучениеСоответствияПорядкаСортировкиСтатьиЗатрат();   
	
	ТаблицаДанных_Косвенные.Свернуть("Направление,ПериодОтчета,ПериодОтчетаРодитель,Организация", ПризнакРасчетаПланФакт);   
	ТаблицаДанных_Косвенные.Сортировать("ПериодОтчета УБЫВ");
	ДанныеПоКосвеннымРасходам = РассчитаемКосвенныеРасходыОтдельно(ТаблицаДанных_Косвенные,ТаблицаПроцентов_РаспределениеКосвенные,СоответствияПорядкаСортировкиСтатьиЗатрат,ПризнакРасчетаПланФакт);
	ДополнитьТаблицу(ДанныеПоКосвеннымРасходам,РезультатЗапроса);

КонецПроцедуры // ОбработаемКосвенныеРасходыОтдельно()

#КонецОбласти     

